{"ast":null,"code":"var _jsxFileName = \"/Users/majy/work/bici/code/editor-demo/src/features/editor/constants/defines.tsx\";\n\n/**\n * @file 管道画布常量定义\n */\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\n// 组件卡片宽度高度\nexport const NODE_WIDTH = 220;\nexport const NODE_HEIGHT = 60; // 右边菜单栏宽度\n\nexport const MENU_WIDTH = 120;\nexport const MENU_HEIGHT = 196; // 右边抽屉宽度-通用\n\nexport const RIGHTDRAWER_WIDTH = 521; // 右边抽屉宽度-调度配置\n\nexport const SHECHEDULE_RIGHTDRAWER_WIDTH = 750; // 支持缩放的最大值跟最小值\n\nexport const MAX_SCALE = 200;\nexport const MIN_SCALE = 50; // 组件之间的间距\n\nexport const COMPONENT_DISTANCE = 30; // 全屏状态的坐标差,顶部导航到画布的距离\n\nexport const fullscreenDiffY = 130; // 顶部导航到画布的固定举例，用于计算Context\n\nexport const CONTEXT_HEIGHT_DIFF = 155; // 连接符\n\nexport const CONNECTOR = \"_\"; // 连线可连线的区域\n\nexport const LINK_AREA = 30; // 连线不同状态的颜色\n// 未连接状态\n\nexport const UNLINK = \"#52619b\"; // 选中状态\n\nexport const ACTIVE = \"#92ade3\"; // 连接状态\n\nexport const LINK = \"#b4bdcf\"; // 管道节点code为30，为固定值\n\nexport const operatorTypeCode = 30; // 组件库类型\n\nexport let ComponentType;\n\n(function (ComponentType) {\n  ComponentType[\"common\"] = \"common\";\n  ComponentType[\"self\"] = \"self\";\n})(ComponentType || (ComponentType = {}));\n\nexport const ComponentMap = {\n  [ComponentType.common]: \"通用\",\n  [ComponentType.self]: '自定义'\n};\nexport class Node {\n  constructor() {\n    this.type = void 0;\n    this.key = void 0;\n    this.name = void 0;\n    this.icon = void 0;\n    this.x = void 0;\n    this.y = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.id = void 0;\n    this.groupId = void 0;\n    this.ref = void 0;\n    this.distribute = void 0;\n    this.webConfig = void 0;\n    this.disabled = void 0;\n  }\n\n}\nexport class NodePanel {\n  constructor() {\n    this.type = void 0;\n    this.key = void 0;\n    this.name = void 0;\n    this.icon = void 0;\n    this.disabled = void 0;\n  }\n\n}\n// group padding\nexport const GROUP_PADDING = 20; // 连线中的icon，宽高\n\nexport const LINKICON_WIDTH = 18;\nexport const LINKICON_HEIGHT = 18;\nexport let ComponentKey; // 单元类型\n// 输入组件\n\n(function (ComponentKey) {\n  ComponentKey[\"rect\"] = \"rect\";\n  ComponentKey[\"rectRadius\"] = \"rectRadius\";\n  ComponentKey[\"circle\"] = \"circle\";\n  ComponentKey[\"diamond\"] = \"diamond\";\n  ComponentKey[\"polygon\"] = \"polygon\";\n  ComponentKey[\"ellipse\"] = \"ellipse\";\n  ComponentKey[\"star\"] = \"star\";\n})(ComponentKey || (ComponentKey = {}));\n\nconst COMMON_COMPONENT = [\n/** 矩形 */\n{\n  type: ComponentType.common,\n  key: ComponentKey.rect,\n  name: \"RECT\",\n  width: 100,\n  height: 100,\n  icon: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 36,\n      height: 36,\n      border: \"2px solid #52619b\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }),\n  disabled: false\n},\n/** 矩形带圆角 */\n{\n  type: ComponentType.common,\n  key: ComponentKey.rectRadius,\n  name: \"RECT-RADIU\",\n  width: 100,\n  height: 100,\n  icon: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 36,\n      height: 36,\n      border: \"2px solid #52619b\",\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }),\n  disabled: false\n},\n/** 圆形 */\n{\n  type: ComponentType.common,\n  key: ComponentKey.circle,\n  name: \"CIRCLE\",\n  width: 100,\n  height: 100,\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\",\n    width: \"72px\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"36\",\n    cy: \"20\",\n    r: \"18\",\n    stroke: \"#52619b\",\n    strokeWidth: \"2\",\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })),\n  disabled: false\n},\n/** 矩形 */\n{\n  type: ComponentType.self,\n  key: ComponentKey.rect,\n  name: \"RECT\",\n  width: 100,\n  height: 100,\n  icon: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 36,\n      height: 36,\n      border: \"2px solid #52619b\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }),\n  disabled: false\n}]; // 组件库类目\n\nexport const COMPONENT_CATEGORY = {\n  [ComponentType.common]: COMMON_COMPONENT // [ComponentType.self]: SELF_COMPONENT\n\n};\nexport const keyCodeMap = {\n  delete: 8,\n  copy: 67,\n  paste: 86\n};\n/** 处理弹窗全屏挂载 */\n\nexport function getContainer() {\n  const pipelineDoms = document.getElementsByClassName(\"pipeline-canvas\");\n  return _.find(pipelineDoms, dom => dom.offsetParent);\n}\n/**\n * @file 类型定义文件\n */\n\nclass MenuPos {\n  constructor() {\n    this.id = void 0;\n    this.x = void 0;\n    this.y = void 0;\n  }\n\n} // 节点宽高\n\n\nexport const VERTEX_WIDTH = 180;\nexport const VERTEX_HEIGHT = 32;\nexport { MenuPos }; // 操作类型\n\nexport let OperateType;\n\n(function (OperateType) {\n  OperateType[\"copy\"] = \"copy\";\n  OperateType[\"delete\"] = \"delete\";\n})(OperateType || (OperateType = {}));","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/constants/defines.tsx"],"names":["React","_","NODE_WIDTH","NODE_HEIGHT","MENU_WIDTH","MENU_HEIGHT","RIGHTDRAWER_WIDTH","SHECHEDULE_RIGHTDRAWER_WIDTH","MAX_SCALE","MIN_SCALE","COMPONENT_DISTANCE","fullscreenDiffY","CONTEXT_HEIGHT_DIFF","CONNECTOR","LINK_AREA","UNLINK","ACTIVE","LINK","operatorTypeCode","ComponentType","ComponentMap","common","self","Node","type","key","name","icon","x","y","width","height","id","groupId","ref","distribute","webConfig","disabled","NodePanel","GROUP_PADDING","LINKICON_WIDTH","LINKICON_HEIGHT","ComponentKey","COMMON_COMPONENT","rect","border","rectRadius","borderRadius","circle","COMPONENT_CATEGORY","keyCodeMap","delete","copy","paste","getContainer","pipelineDoms","document","getElementsByClassName","find","dom","offsetParent","MenuPos","VERTEX_WIDTH","VERTEX_HEIGHT","OperateType"],"mappings":"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","sourcesContent":["/**\n * @file 管道画布常量定义\n */\n\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { Icon } from \"antd\";\n\n// 组件卡片宽度高度\nexport const NODE_WIDTH = 220;\nexport const NODE_HEIGHT = 60;\n\n// 右边菜单栏宽度\nexport const MENU_WIDTH = 120;\nexport const MENU_HEIGHT = 196;\n// 右边抽屉宽度-通用\nexport const RIGHTDRAWER_WIDTH = 521;\n// 右边抽屉宽度-调度配置\nexport const SHECHEDULE_RIGHTDRAWER_WIDTH = 750;\n\n// 支持缩放的最大值跟最小值\nexport const MAX_SCALE = 200;\nexport const MIN_SCALE = 50;\n\n// 组件之间的间距\nexport const COMPONENT_DISTANCE = 30;\n\n// 全屏状态的坐标差,顶部导航到画布的距离\nexport const fullscreenDiffY = 130;\n\n// 顶部导航到画布的固定举例，用于计算Context\nexport const CONTEXT_HEIGHT_DIFF = 155;\n\n// 连接符\nexport const CONNECTOR = \"_\";\n\n// 连线可连线的区域\nexport const LINK_AREA = 30;\n\n// 连线不同状态的颜色\n// 未连接状态\nexport const UNLINK = \"#52619b\";\n// 选中状态\nexport const ACTIVE = \"#92ade3\";\n// 连接状态\nexport const LINK = \"#b4bdcf\";\n\n// 管道节点code为30，为固定值\nexport const operatorTypeCode = 30;\n\n// 组件库类型\nexport enum ComponentType {\n    /** 通用 */\n    common = \"common\",\n    /** 自定义 */\n    self = 'self'\n}\n\nexport const ComponentMap: Record<ComponentType, string> = {\n    [ComponentType.common]: \"通用\",\n    [ComponentType.self]: '自定义'\n};\n\nexport class Node {\n    /** 组件类型 */\n    type?: string;\n\n    /** 组件key */\n    key!: string;// ! 为非空断言\n\n    /** 组件名称 */\n    name!: string;\n\n    /** 组件icon */\n    icon?: React.ReactNode;\n\n    /** 组件在画布中的横坐标 */\n    x?: number;\n\n    /** 组件在画布中的纵坐标 */\n    y?: number;\n\n    width?: number;\n\n    height?: number;\n\n    id?: string;\n\n    groupId?: string;\n\n    /** 对应的 ref */\n    ref?: any;\n\n    /** 数据分发方式, true:轮流 false:copy */\n    distribute?: boolean;\n\n    /** 其他配置信息 */\n    webConfig?: {};\n\n    disabled?: boolean;\n}\n\nexport class NodePanel {\n    type!: string;\n\n    key!: string;\n\n    name!: string;\n\n    icon!: React.ReactNode;\n\n    disabled!: boolean;\n}\n\nexport type LINK_POSITION = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport interface Link {\n    /** 连线的唯一id, source+CONNECTOR+target的形式 */\n    id: string;\n    /** 来源节点id */\n    source: string;\n    /** 去向节点id */\n    target: string;\n    /** 来源节点位置 */\n    sourcePos?: string;\n    /** 去向节点位置 */\n    targetPos?: string;\n}\n\nexport interface Group {\n    /** 组的id */\n    id: string;\n    /** 组在画布中的横坐标 */\n    x: number;\n\n    /** 组在画布中的纵坐标 */\n    y: number;\n\n    width: number;\n\n    height: number;\n\n    /** 包含的节点id */\n    nodes?: Node[];\n\n    /** 对应的 ref */\n    ref?: any;\n\n    /** 父级 */\n    parentId?: string;\n\n    /** 其他信息 */\n    extraInfo?: any;\n}\n\n// group padding\nexport const GROUP_PADDING = 20;\n\n// 连线中的icon，宽高\nexport const LINKICON_WIDTH = 18;\nexport const LINKICON_HEIGHT = 18;\n\nexport enum ComponentKey {\n    rect = \"rect\",\n    rectRadius = \"rectRadius\",\n    circle = \"circle\",\n    diamond = \"diamond\",\n    polygon = \"polygon\",\n    ellipse = \"ellipse\",\n    star = \"star\"\n}\n\n// 单元类型\n// 输入组件\nconst COMMON_COMPONENT: Node[] = [\n    /** 矩形 */\n    {\n        type: ComponentType.common,\n        key: ComponentKey.rect,\n        name: \"RECT\",\n        width: 100,\n        height: 100,\n        icon: (\n            <div style={{ width: 36, height: 36, border: \"2px solid #52619b\" }} />\n        ),\n        disabled: false\n    },\n    /** 矩形带圆角 */\n    {\n        type: ComponentType.common,\n        key: ComponentKey.rectRadius,\n        name: \"RECT-RADIU\",\n        width: 100,\n        height: 100,\n        icon: (\n            <div\n                style={{\n                    width: 36,\n                    height: 36,\n                    border: \"2px solid #52619b\",\n                    borderRadius: 10\n                }}\n            />\n        ),\n        disabled: false\n    },\n    /** 圆形 */\n    {\n        type: ComponentType.common,\n        key: ComponentKey.circle,\n        name: \"CIRCLE\",\n        width: 100,\n        height: 100,\n        icon: (\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                version=\"1.1\"\n                width=\"72px\"\n                height=\"40px\"\n            >\n                <circle\n                    cx=\"36\"\n                    cy=\"20\"\n                    r=\"18\"\n                    stroke=\"#52619b\"\n                    strokeWidth=\"2\"\n                    fill=\"transparent\"\n                />\n            </svg>\n        ),\n        disabled: false\n    },\n    /** 矩形 */\n    {\n        type: ComponentType.self,\n        key: ComponentKey.rect,\n        name: \"RECT\",\n        width: 100,\n        height: 100,\n        icon: (\n            <div style={{ width: 36, height: 36, border: \"2px solid #52619b\" }} />\n        ),\n        disabled: false\n    },\n];\n\n// 组件库类目\nexport const COMPONENT_CATEGORY: Record<ComponentType, Node[]> = {\n    [ComponentType.common]: COMMON_COMPONENT\n    // [ComponentType.self]: SELF_COMPONENT\n};\n\nexport const keyCodeMap = {\n    delete: 8,\n    copy: 67,\n    paste: 86\n};\n\n/** 处理弹窗全屏挂载 */\nexport function getContainer() {\n    const pipelineDoms = document.getElementsByClassName(\"pipeline-canvas\");\n    return _.find(\n        pipelineDoms,\n        dom => (dom as HTMLElement).offsetParent\n    ) as HTMLElement;\n}\n\n/**\n * @file 类型定义文件\n */\nclass MenuPos {\n    id?: string;\n\n    x!: number;\n\n    y!: number;\n}\n\n// 节点宽高\nexport const VERTEX_WIDTH = 180;\nexport const VERTEX_HEIGHT = 32;\n\nexport { MenuPos };\n\n// 操作类型\nexport enum OperateType {\n    copy = \"copy\",\n    delete = \"delete\"\n}\n"]},"metadata":{},"sourceType":"module"}