{"ast":null,"code":"/**\n * @file 圈选器逻辑处理，与视图分离\n * @author perkinJ\n */\nimport * as React from 'react';\nimport { handlePathData } from './calc';\nimport { ShapeProps } from './types';\nconst {\n  useCallback,\n  useEffect,\n  useState,\n  useRef\n} = React;\nconst initSelectorProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  direction: 'left'\n};\nexport default function useDragSelect(dragSelectContainerRef, shape) {\n  const [shapeProps, setShapeProps] = useState(initSelectorProps);\n  const [pathData, setPathData] = useState(''); // 记录mousedown事件的X,Y位置，\n\n  const mousdownX = useRef(0);\n  const mousdownY = useRef(0);\n  const handleMouseMove = useCallback(event => {\n    const newX = event.layerX;\n    const newY = event.layerY;\n    const newWidth = Math.abs(newX - mousdownX.current);\n    const newHeight = Math.abs(newY - mousdownY.current);\n    const diffX = newX - mousdownX.current;\n    const newShapeProps = {\n      x: mousdownX.current,\n      y: mousdownY.current,\n      width: newWidth,\n      height: newHeight,\n      direction: diffX < 0 ? 'right' : 'left'\n    };\n    const path = handlePathData(shape, newShapeProps);\n    setPathData(path);\n    setShapeProps(newShapeProps);\n  }, [setShapeProps, shape]);\n  const handleMouseUp = useCallback(event => {\n    event.stopPropagation(); // 清空路径\n\n    setPathData(''); // 清空初次点击数据\n\n    mousdownX.current = 0;\n    mousdownY.current = 0;\n    dragSelectContainerRef.current.removeEventListener('mousemove', handleMouseMove);\n  }, [dragSelectContainerRef, handleMouseMove]);\n  const handleMouseDown = useCallback(event => {\n    event.stopPropagation();\n    mousdownX.current = event.layerX;\n    mousdownY.current = event.layerY;\n    dragSelectContainerRef.current.addEventListener('mousemove', handleMouseMove);\n    dragSelectContainerRef.current.addEventListener('mouseup', handleMouseUp);\n  }, [dragSelectContainerRef, handleMouseMove, handleMouseUp]);\n  useEffect(() => {\n    const drag = dragSelectContainerRef.current;\n    drag.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      drag.removeEventListener('mousedown', handleMouseDown);\n    };\n  }, [dragSelectContainerRef, handleMouseDown]); // 返回选择器坐标位置以及生成的path数据\n\n  return {\n    shapeProps,\n    pathData\n  };\n}\nexport { ShapeProps };","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/utils/useDragSelect.ts"],"names":["React","handlePathData","ShapeProps","useCallback","useEffect","useState","useRef","initSelectorProps","x","y","width","height","direction","useDragSelect","dragSelectContainerRef","shape","shapeProps","setShapeProps","pathData","setPathData","mousdownX","mousdownY","handleMouseMove","event","newX","layerX","newY","layerY","newWidth","Math","abs","current","newHeight","diffX","newShapeProps","path","handleMouseUp","stopPropagation","removeEventListener","handleMouseDown","addEventListener","drag"],"mappings":"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","sourcesContent":["/**\n * @file 圈选器逻辑处理，与视图分离\n * @author perkinJ\n */\n\nimport * as React from 'react';\n\nimport { handlePathData } from './calc';\nimport { Shape, ShapeProps } from './types';\n\nconst { useCallback, useEffect, useState, useRef } = React;\n\nconst initSelectorProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  direction: 'left',\n} as ShapeProps;\n\nexport default function useDragSelect(dragSelectContainerRef: any, shape: Shape) {\n  const [shapeProps, setShapeProps] = useState<ShapeProps>(initSelectorProps);\n\n  const [pathData, setPathData] = useState('');\n\n  // 记录mousedown事件的X,Y位置，\n  const mousdownX = useRef(0);\n  const mousdownY = useRef(0);\n\n  const handleMouseMove = useCallback(\n    event => {\n      const newX = event.layerX;\n      const newY = event.layerY;\n      const newWidth = Math.abs(newX - mousdownX.current);\n      const newHeight = Math.abs(newY - mousdownY.current);\n\n      const diffX = newX - mousdownX.current;\n\n      const newShapeProps = {\n        x: mousdownX.current,\n        y: mousdownY.current,\n        width: newWidth,\n        height: newHeight,\n        direction: diffX < 0 ? 'right' : 'left',\n      } as ShapeProps;\n\n      const path = handlePathData(shape, newShapeProps);\n      setPathData(path);\n      setShapeProps(newShapeProps);\n    },\n    [setShapeProps, shape],\n  );\n\n  const handleMouseUp = useCallback(\n    event => {\n      event.stopPropagation();\n\n      // 清空路径\n      setPathData('');\n\n      // 清空初次点击数据\n      mousdownX.current = 0;\n      mousdownY.current = 0;\n      dragSelectContainerRef.current.removeEventListener('mousemove', handleMouseMove);\n    },\n    [dragSelectContainerRef, handleMouseMove],\n  );\n\n  const handleMouseDown = useCallback(\n    event => {\n      event.stopPropagation();\n\n      mousdownX.current = event.layerX;\n      mousdownY.current = event.layerY;\n\n      dragSelectContainerRef.current.addEventListener('mousemove', handleMouseMove);\n      dragSelectContainerRef.current.addEventListener('mouseup', handleMouseUp);\n    },\n    [dragSelectContainerRef, handleMouseMove, handleMouseUp],\n  );\n\n  useEffect(() => {\n    const drag = dragSelectContainerRef.current;\n    drag.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      drag.removeEventListener('mousedown', handleMouseDown);\n    };\n  }, [dragSelectContainerRef, handleMouseDown]);\n\n  // 返回选择器坐标位置以及生成的path数据\n  return { shapeProps, pathData };\n}\n\nexport { ShapeProps };\n"]},"metadata":{},"sourceType":"module"}