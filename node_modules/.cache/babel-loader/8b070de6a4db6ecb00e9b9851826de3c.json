{"ast":null,"code":"/**\n * @file 类型定义\n */\n// 树输出点\n// 图输出点\n// 图输出边\n// 图配置定义\nexport class GraphConfig {\n  constructor() {\n    this.isDirect = void 0;\n  }\n\n}\nexport const defaultGraphConfig = {\n  isDirect: true\n};","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/regraph/BaseGraph/type.ts"],"names":["GraphConfig","isDirect","defaultGraphConfig"],"mappings":"AAAA;;;AAIA;AASA;AAQA;AASA;AACA,OAAO,MAAMA,WAAN,CAAkB;AAAA;AAAA,SAEvBC,QAFuB;AAAA;;AAAA;AAKzB,OAAO,MAAMC,kBAA+B,GAAG;AAC7CD,EAAAA,QAAQ,EAAE;AADmC,CAAxC","sourcesContent":["/**\n * @file 类型定义\n */\n\n// 树输出点\nexport type OutputVertex<T extends object> = {\n  id: string;\n  children: OutputVertex<T>[];\n  _origin: T,\n} & {\n  [x in keyof T]: T[x];\n}\n\n// 图输出点\nexport type OutputGraphVertex<V extends object, E extends object> = {\n  _id: string;\n  _relations: OutputGraphEdge<V, E>[];\n} & {\n  [x in keyof V]: V[x];\n}\n\n// 图输出边\nexport type OutputGraphEdge<V extends object, E extends object> = {\n  _u: OutputGraphVertex<V, E>;\n  _v: OutputGraphVertex<V, E>;\n  _origin: E;\n} & {\n  [x in keyof E]: E[x];\n}\n\n// 图配置定义\nexport class GraphConfig {\n  /** 是否为有向图 */\n  isDirect: boolean\n}\n\nexport const defaultGraphConfig: GraphConfig = {\n  isDirect: true,\n};\n"]},"metadata":{},"sourceType":"module"}