{"ast":null,"code":"var _jsxFileName = \"/Users/majy/work/bici/code/editor-demo/src/features/editor/components/DragSelector.tsx\";\n\n/**\n * @file 圈选器组件\n * @author perkinJ\n */\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport useDragSelect, { ShapeProps } from \"../utils/useDragSelect\";\nimport { getHeight, getWidth, getPosition } from \"../utils/calc\";\nimport \"./DragSelector.scss\";\nconst {\n  useRef,\n  useCallback,\n  useMemo\n} = React;\n\nclass DragSeletorProps {\n  constructor() {\n    this.overlayColor = void 0;\n    this.selectorStyle = void 0;\n    this.visible = void 0;\n    this.onClose = void 0;\n    this.getPopupContainer = void 0;\n  }\n\n}\n\nexport default function DragSeletor(props) {\n  const {\n    // width,\n    // height,\n    overlayColor,\n    selectorStyle,\n    visible,\n    onClose,\n    getPopupContainer\n  } = props;\n  const dragSelectContainerRef = useRef(null);\n  const {\n    shapeProps,\n    pathData\n  } = useDragSelect(dragSelectContainerRef, \"rect\");\n  const handleClick = useCallback(event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (onClose) {\n      onClose(shapeProps);\n    }\n  }, [onClose, shapeProps]);\n  return useMemo(() => {\n    const classes = classNames(\"drag-select-container\", {\n      \"drag-select-hidden\": !visible\n    });\n    const popupContainer = getPopupContainer();\n    const width = getWidth(popupContainer);\n    const height = getHeight(popupContainer);\n    const position = getPosition(popupContainer);\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      ref: dragSelectContainerRef,\n      className: classes,\n      width: width,\n      height: height,\n      style: {\n        background: overlayColor,\n        left: position === null || position === void 0 ? void 0 : position.x,\n        top: position === null || position === void 0 ? void 0 : position.y\n      },\n      xmlns: \"http://www.w3.org/2000/svg\",\n      onDrag: event => {\n        event.preventDefault();\n      },\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: pathData,\n      style: { ...selectorStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  }, [overlayColor, handleClick, selectorStyle, visible, pathData]);\n}\nexport { ShapeProps };","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/components/DragSelector.tsx"],"names":["React","classNames","useDragSelect","ShapeProps","getHeight","getWidth","getPosition","useRef","useCallback","useMemo","DragSeletorProps","overlayColor","selectorStyle","visible","onClose","getPopupContainer","DragSeletor","props","dragSelectContainerRef","shapeProps","pathData","handleClick","event","stopPropagation","preventDefault","classes","popupContainer","width","height","position","background","left","x","top","y"],"mappings":";;AAAA;;;;AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,wBAA1C;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,eAAjD;AAEA,OAAO,qBAAP;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA;AAAvB,IAAmCT,KAAzC;;AAEA,MAAMU,gBAAN,CAAuB;AAAA;AAAA,SAErBC,YAFqB;AAAA,SAKrBC,aALqB;AAAA,SAQrBC,OARqB;AAAA,SAWrBC,OAXqB;AAAA,SAcrBC,iBAdqB;AAAA;;AAAA;;AAiBvB,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA8C;AAC3D,QAAM;AACJ;AACA;AACAN,IAAAA,YAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA;AAPI,MAQFE,KARJ;AASA,QAAMC,sBAAsB,GAAGX,MAAM,CAAC,IAAD,CAArC;AAEA,QAAM;AAAEY,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BlB,aAAa,CAC5CgB,sBAD4C,EAE5C,MAF4C,CAA9C;AAKA,QAAMG,WAAW,GAAGb,WAAW,CAC7Bc,KAAK,IAAI;AACPA,IAAAA,KAAK,CAACC,eAAN;AACAD,IAAAA,KAAK,CAACE,cAAN;;AACA,QAAIV,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACK,UAAD,CAAP;AACD;AACF,GAP4B,EAQ7B,CAACL,OAAD,EAAUK,UAAV,CAR6B,CAA/B;AAWA,SAAOV,OAAO,CAAC,MAAM;AACnB,UAAMgB,OAAO,GAAGxB,UAAU,CAAC,uBAAD,EAA0B;AAClD,4BAAsB,CAACY;AAD2B,KAA1B,CAA1B;AAIA,UAAMa,cAAc,GAAGX,iBAAiB,EAAxC;AACA,UAAMY,KAAK,GAAGtB,QAAQ,CAACqB,cAAD,CAAtB;AACA,UAAME,MAAM,GAAGxB,SAAS,CAACsB,cAAD,CAAxB;AACA,UAAMG,QAAQ,GAAGvB,WAAW,CAACoB,cAAD,CAA5B;AAEA,wBACE;AACE,MAAA,GAAG,EAAER,sBADP;AAEE,MAAA,SAAS,EAAEO,OAFb;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,KAAK,EAAE;AACLE,QAAAA,UAAU,EAAEnB,YADP;AAELoB,QAAAA,IAAI,EAAEF,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG,CAFX;AAGLC,QAAAA,GAAG,EAAEJ,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEK;AAHV,OALT;AAUE,MAAA,KAAK,EAAC,4BAVR;AAWE,MAAA,MAAM,EAAEZ,KAAK,IAAI;AACfA,QAAAA,KAAK,CAACE,cAAN;AACD,OAbH;AAcE,MAAA,OAAO,EAAEH,WAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAM,MAAA,CAAC,EAAED,QAAT;AAAmB,MAAA,KAAK,EAAE,EAAE,GAAGR;AAAL,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,CADF;AAuBD,GAjCa,EAiCX,CAACD,YAAD,EAAeU,WAAf,EAA4BT,aAA5B,EAA2CC,OAA3C,EAAoDO,QAApD,CAjCW,CAAd;AAkCD;AAED,SAASjB,UAAT","sourcesContent":["/**\n * @file 圈选器组件\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport useDragSelect, { ShapeProps } from \"../utils/useDragSelect\";\nimport { StyleProps } from \"../utils/types\";\nimport { getHeight, getWidth, getPosition } from \"../utils/calc\";\n\nimport \"./DragSelector.scss\";\n\nconst { useRef, useCallback, useMemo } = React;\n\nclass DragSeletorProps {\n  /** 蒙层的颜色 */\n  overlayColor?: string;\n\n  /** 选择器的样式 */\n  selectorStyle?: StyleProps;\n\n  /** 是否展示 */\n  visible: boolean;\n\n  /** 关闭 */\n  onClose?: (selectProps: ShapeProps) => void;\n\n  /** 挂载在DOM节点下 */\n  getPopupContainer?: () => HTMLElement;\n}\n\nexport default function DragSeletor(props: DragSeletorProps) {\n  const {\n    // width,\n    // height,\n    overlayColor,\n    selectorStyle,\n    visible,\n    onClose,\n    getPopupContainer\n  } = props;\n  const dragSelectContainerRef = useRef(null);\n\n  const { shapeProps, pathData } = useDragSelect(\n    dragSelectContainerRef,\n    \"rect\"\n  );\n\n  const handleClick = useCallback(\n    event => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (onClose) {\n        onClose(shapeProps);\n      }\n    },\n    [onClose, shapeProps]\n  );\n\n  return useMemo(() => {\n    const classes = classNames(\"drag-select-container\", {\n      \"drag-select-hidden\": !visible\n    });\n\n    const popupContainer = getPopupContainer() as HTMLElement;\n    const width = getWidth(popupContainer);\n    const height = getHeight(popupContainer);\n    const position = getPosition(popupContainer) as { x: number; y: number };\n\n    return (\n      <svg\n        ref={dragSelectContainerRef}\n        className={classes}\n        width={width}\n        height={height}\n        style={{\n          background: overlayColor,\n          left: position?.x,\n          top: position?.y\n        }}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        onDrag={event => {\n          event.preventDefault();\n        }}\n        onClick={handleClick}\n      >\n        <g>\n          {/** 可支持多个图形，矩形，圆形，自定义路径等 */}\n          <path d={pathData} style={{ ...selectorStyle }} />\n        </g>\n      </svg>\n    );\n  }, [overlayColor, handleClick, selectorStyle, visible, pathData]);\n}\n\nexport { ShapeProps };\n"]},"metadata":{},"sourceType":"module"}