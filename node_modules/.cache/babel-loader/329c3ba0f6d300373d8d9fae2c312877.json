{"ast":null,"code":"var _jsxFileName = \"/Users/majy/work/bici/code/editor-demo/src/features/editor/components/Node.tsx\";\n\n/**\n * @file 通用节点组件\n * @desc 与画布联动，用于计算画布位置、缩放等\n * @author perkinJ\n */\nimport * as React from \"react\";\nimport { useResize } from \"../hooks/useResize\";\nimport \"./Node.scss\";\nconst {\n  useRef,\n  useState,\n  useEffect,\n  useCallback\n} = React;\n\nclass NodeProps {\n  constructor() {\n    this.id = void 0;\n    this.x = void 0;\n    this.y = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.onClick = void 0;\n    this.onContextMenu = void 0;\n    this.node = void 0;\n    this.currTrans = void 0;\n    this.isSelected = void 0;\n    this.children = void 0;\n    this.onResize = void 0;\n    this.chart = void 0;\n  }\n\n}\n/**\n * 获取元素相对于页面的绝对位置\n */\n\n\nexport function getOffset(domNode) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n\n  return {\n    offsetTop,\n    offsetLeft\n  };\n} // node组件开始\n\nconst Node = React.forwardRef((props, ref) => {\n  const {\n    x,\n    y,\n    id,\n    chart,\n    onClick,\n    onContextMenu,\n    children,\n    currTrans,\n    width,\n    height,\n    isSelected,\n    onResize\n  } = props;\n  const [showSelector, setShowSelector] = useState(false);\n  const containerRef = useRef(null); // 获取伸缩的大小\n\n  const {\n    width: resizeWidth,\n    height: resizeHeight,\n    x: resizeX,\n    y: resizeY\n  } = useResize(isSelected, {\n    width,\n    height,\n    x,\n    y,\n    chart\n  });\n\n  const handleContextMenu = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const container = containerRef.current.getBoundingClientRect();\n    container.id = id;\n    const {\n      offsetTop,\n      offsetLeft\n    } = getOffset(container.current); // The position ⟨x,y⟩ is transformed to ⟨xk + tx,yk + ty⟩\n\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n    const newX = (screenX - x) / currTrans.k;\n    const newY = (screenY - y) / currTrans.k;\n    const currentPos = {\n      left: newX,\n      top: newY\n    };\n\n    if (onContextMenu) {\n      onContextMenu(currentPos, event);\n    }\n  };\n\n  const NODE_SELECTOR = [{\n    position: \"left\",\n    style: {\n      left: \"-5px\",\n      top: `${height / 2 - 5}px`\n    }\n  }, {\n    position: \"right\",\n    style: {\n      right: \"-5px\",\n      top: `${height / 2 - 5}px`\n    }\n  }, {\n    position: \"top\",\n    style: {\n      left: `${width / 2 - 5}px`,\n      top: \"-5px\"\n    }\n  }, {\n    position: \"bottom\",\n    style: {\n      left: `${width / 2 - 5}px`,\n      top: `${height - 5}px`\n    }\n  }];\n  const RESIZE_SELECTOR = [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]; // 伸缩器\n\n  const renderResize = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resizers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, RESIZE_SELECTOR.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item,\n    className: `resizer ${item}`,\n    \"data-type\": \"resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })))); // 连线节点选择器\n\n  const renderNodeSelector = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-node-selector\",\n    style: {\n      width,\n      height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, NODE_SELECTOR.map(item => {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      \"data-type\": \"edge\",\n      \"data-position\": item.position,\n      key: item.position,\n      className: `node-selector`,\n      style: item.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    });\n  }));\n  useEffect(() => {\n    onResize(resizeWidth, resizeHeight, resizeX, resizeY);\n  }, [resizeWidth, resizeHeight, resizeX, resizeY]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-node\",\n    style: {\n      left: x,\n      top: y,\n      width,\n      height\n    },\n    ref: ref,\n    onClick: onClick,\n    onMouseEnter: () => setShowSelector(true),\n    onMouseLeave: () => setShowSelector(false),\n    onContextMenu: handleContextMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, (isSelected || showSelector) && renderNodeSelector, isSelected && renderResize, React.cloneElement(children, {\n    ref: containerRef\n  }));\n}); // node组件结束\n\nexport default Node;","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/components/Node.tsx"],"names":["React","useResize","useRef","useState","useEffect","useCallback","NodeProps","id","x","y","width","height","onClick","onContextMenu","node","currTrans","isSelected","children","onResize","chart","getOffset","domNode","offsetTop","offsetLeft","targetDomNode","window","document","body","offsetParent","Node","forwardRef","props","ref","showSelector","setShowSelector","containerRef","resizeWidth","resizeHeight","resizeX","resizeY","handleContextMenu","event","preventDefault","stopPropagation","container","current","getBoundingClientRect","screenX","clientX","screenY","clientY","newX","k","newY","currentPos","left","top","NODE_SELECTOR","position","style","right","RESIZE_SELECTOR","renderResize","map","item","renderNodeSelector","cloneElement"],"mappings":"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","sourcesContent":["/**\n * @file 通用节点组件\n * @desc 与画布联动，用于计算画布位置、缩放等\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport { useResize } from \"../hooks/useResize\";\nimport \"./Node.scss\";\nimport {EChart} from '../constants/defines'\nconst { useRef, useState, useEffect, useCallback } = React;\n\nclass NodeProps {\n  /** 节点id */\n  id: string;\n\n  /** 节点横坐标 */\n  x: number;\n\n  /** 节点纵坐标 */\n  y: number;\n\n  width: number;\n\n  height: number;\n\n  /** 点击节点 */\n  onClick?: (event) => void;\n\n  /** ContextMenu */\n  onContextMenu?: (position: any, event) => void;\n\n  /** 当前节点信息 */\n  node?: any;\n\n  /** 外部画布属性 */\n  currTrans?: any;\n\n  /** 是否被点击 */\n  isSelected: boolean;\n\n  children?: React.ReactNode;\n\n  /** 改变节点大小 */\n  onResize?: (width: number, height: number, x: number, y: number) => void;\n\n  /** chart 信息 */\n  chart?:EChart\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nexport function getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n// node组件开始\nconst Node = React.forwardRef((props: NodeProps, ref: any) => {\n  const {\n    x,\n    y,\n    id,\n    chart,\n    onClick,\n    onContextMenu,\n    children,\n    currTrans,\n    width,\n    height,\n    isSelected,\n    onResize\n  } = props;\n\n  const [showSelector, setShowSelector] = useState(false);\n  const containerRef = useRef(null);\n\n  // 获取伸缩的大小\n  const {\n    width: resizeWidth,\n    height: resizeHeight,\n    x: resizeX,\n    y: resizeY\n  } = useResize(isSelected, {\n    width,\n    height,\n    x,\n    y,\n    chart\n  });\n\n  const handleContextMenu = (event: React.MouseEvent<any>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const container = containerRef.current.getBoundingClientRect();\n    container.id = id;\n    const { offsetTop, offsetLeft } = getOffset(container.current);\n\n    // The position ⟨x,y⟩ is transformed to ⟨xk + tx,yk + ty⟩\n    const screenX = event.clientX - offsetLeft;\n    const screenY = event.clientY - offsetTop;\n\n    const newX = (screenX - x) / currTrans.k;\n    const newY = (screenY - y) / currTrans.k;\n\n    const currentPos = {\n      left: newX,\n      top: newY\n    };\n\n    if (onContextMenu) {\n      onContextMenu(currentPos, event);\n    }\n  };\n\n  const NODE_SELECTOR = [\n    {\n      position: \"left\",\n      style: { left: \"-5px\", top: `${height / 2 - 5}px` }\n    },\n    {\n      position: \"right\",\n      style: { right: \"-5px\", top: `${height / 2 - 5}px` }\n    },\n    {\n      position: \"top\",\n      style: { left: `${width / 2 - 5}px`, top: \"-5px\" }\n    },\n    {\n      position: \"bottom\",\n      style: { left: `${width / 2 - 5}px`, top: `${height - 5}px` }\n    }\n  ];\n\n  const RESIZE_SELECTOR = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-left\",\n    \"bottom-right\"\n  ];\n\n  // 伸缩器\n  const renderResize = (\n    <div className=\"resizable\">\n      <div className=\"resizers\">\n        {RESIZE_SELECTOR.map(item => (\n          <div key={item} className={`resizer ${item}`} data-type=\"resize\" />\n        ))}\n      </div>\n    </div>\n  );\n\n  // 连线节点选择器\n  const renderNodeSelector = (\n    <div className=\"editor-node-selector\" style={{ width, height }}>\n      {NODE_SELECTOR.map(item => {\n        return (\n          <a\n            data-type=\"edge\"\n            data-position={item.position}\n            key={item.position}\n            className={`node-selector`}\n            style={item.style}\n          />\n        );\n      })}\n    </div>\n  );\n\n  useEffect(() => {\n    onResize(resizeWidth, resizeHeight, resizeX, resizeY);\n  }, [resizeWidth, resizeHeight, resizeX, resizeY]);\n\n  return (\n    <div\n      className=\"editor-node\"\n      style={{\n        left: x,\n        top: y,\n        width,\n        height\n      }}\n      ref={ref}\n      onClick={onClick}\n      onMouseEnter={() => setShowSelector(true)}\n      onMouseLeave={() => setShowSelector(false)}\n      onContextMenu={handleContextMenu}\n    >\n      {(isSelected || showSelector) && renderNodeSelector}\n      {isSelected && renderResize}\n      {React.cloneElement(children as React.ReactElement<any>, {\n        ref: containerRef\n      })}\n    </div>\n  );\n});\n// node组件结束\n\nexport default Node;\n"]},"metadata":{},"sourceType":"module"}