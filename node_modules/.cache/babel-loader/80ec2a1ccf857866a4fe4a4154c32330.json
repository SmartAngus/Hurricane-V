{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar d3_zoom_1 = require(\"d3-zoom\");\n\nvar d3Select = require(\"d3-selection\");\n\nvar utils_1 = require(\"./utils\");\n\nrequire(\"./ReScreen.css\");\n\nvar MINI_MAP_RATIO = 0.9;\nvar ANIMATION_TIME = 500;\n\nvar ButtonsProps = function () {\n  function ButtonsProps() {}\n\n  return ButtonsProps;\n}();\n\nexports.ButtonsProps = ButtonsProps;\n\nvar MiniMapProps = function () {\n  function MiniMapProps() {}\n\n  return MiniMapProps;\n}();\n\nvar Props = function () {\n  function Props() {\n    this.onClick = function () {};\n\n    this.onContextMenu = function () {};\n\n    this.onDragOver = function () {};\n\n    this.onDrop = function () {};\n  }\n\n  return Props;\n}();\n\nvar State = function () {\n  function State() {}\n\n  return State;\n}();\n\nvar ReScreen = function (_super) {\n  tslib_1.__extends(ReScreen, _super);\n\n  function ReScreen(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.useMapWidth = true;\n    _this.screenWidth = 0;\n    _this.screenHeight = 0;\n    _this.screenTransform = d3_zoom_1.zoomIdentity;\n    _this.minimapTransform = d3_zoom_1.zoomIdentity;\n    _this.transform = d3_zoom_1.zoomIdentity;\n    _this.state = {\n      screenToMapTransform: d3_zoom_1.zoomIdentity,\n      animation: false,\n      showMiniMap: false\n    };\n\n    _this.handleSyncMiniMapView = function () {\n      _this.getScreenToMapTransform();\n    };\n\n    _this.getScreenToMapTransform = function () {\n      var BBox = _this.getBBox();\n\n      var _a = _this.props,\n          type = _a.type,\n          mapWidth = _a.mapWidth,\n          mapHeight = _a.mapHeight,\n          contentRange = _a.contentRange;\n      var x = BBox.x;\n      var y = BBox.y;\n      _this.useMapWidth = mapWidth / BBox.width * BBox.height < mapHeight;\n      var k = (_this.useMapWidth ? mapWidth / BBox.width : mapHeight / BBox.height) * MINI_MAP_RATIO;\n      var screenToMapTransform;\n\n      if (contentRange && contentRange.length === 2) {\n        var x_1 = mapWidth / 2 - (contentRange[0].x + contentRange[1].x) / 2;\n        var y_1 = mapHeight / 2 - (contentRange[0].y + contentRange[1].y) / 2;\n        var P0 = [mapWidth / 2, mapHeight / 2];\n        var P1 = d3_zoom_1.zoomIdentity.translate(x_1, y_1).scale(1).invert(P0);\n        screenToMapTransform = d3_zoom_1.zoomIdentity.translate(P0[0] - P1[0] * k, P0[1] - P1[1] * k).scale(k);\n      } else if (type === 'SVG') {\n        var xx = -1 * _this.transform.invertX(x);\n\n        var yy = -1 * _this.transform.invertY(y);\n\n        screenToMapTransform = d3_zoom_1.zoomIdentity.translate(xx, yy).scale(k * _this.transform.k);\n      } else if (type === 'DOM') {\n        screenToMapTransform = d3_zoom_1.zoomIdentity.translate(-x, -y).scale(k);\n      }\n\n      _this.setState({\n        screenToMapTransform: screenToMapTransform\n      }, _this.props.resetNeedRefresh);\n\n      _this.props.needMinimap && _this.clReScreenContent(screenToMapTransform);\n    };\n\n    _this.applyTransform = function (transform) {\n      var _a = _this.props,\n          type = _a.type,\n          mapRectStyle = _a.mapRectStyle;\n      var screenToMapTransform = _this.state.screenToMapTransform;\n\n      if (type === 'SVG') {\n        _this.screenContent && _this.screenContent.attr('transform', \"translate(\" + transform.x + \", \" + transform.y + \") scale(\" + transform.k + \")\");\n      } else if (type === 'DOM') {\n        _this.screenContent && _this.screenContent.style('transform', \"translate(\" + transform.x + \"px, \" + transform.y + \"px) scale(\" + transform.k + \")\");\n        _this.screenContent && _this.screenContent.style('transform-origin', '0 0');\n      }\n\n      _this.transform = d3_zoom_1.zoomIdentity.translate(transform.x, transform.y).scale(transform.k);\n\n      if (_this.rectRef.current) {\n        var strokeWidth = (mapRectStyle || {}).strokeWidth;\n        _this.rectRef.current.style.x = -_this.transform.x;\n        _this.rectRef.current.style.y = -_this.transform.y;\n        _this.rectRef.current.style.transform = \"scale(\" + 1 / transform.k + \")\";\n        _this.rectRef.current.style.strokeWidth = strokeWidth !== undefined ? strokeWidth * (1 / screenToMapTransform.k) * transform.k : undefined;\n      }\n\n      var showMiniMap = _this.checkShowMiniMap();\n\n      if (showMiniMap !== _this.state.showMiniMap) {\n        _this.setState({\n          showMiniMap: showMiniMap\n        }, function () {\n          _this.cancelAnimation();\n        });\n      }\n    };\n\n    _this.handleApplyTransform = function (transform) {\n      _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.translate(transform.x, transform.y).scale(transform.k));\n\n      _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n    };\n\n    _this.handleFullScreen = function () {\n      var isFull = document.fullscreenElement || document.webkitFullscreenElement;\n\n      if (isFull) {\n        utils_1.exitFullscreen();\n      } else {\n        utils_1.requestFullscreen(_this.screenDOM);\n      }\n    };\n\n    _this.handleResetPosition = function () {\n      _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity);\n\n      _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n    };\n\n    _this.handleShowAll = function () {\n      console.warn('handleShowAll 计划下线，适应画布请添加 contentRange 使用 handleAdapt 方法');\n      var _a = _this.props,\n          mapWidth = _a.mapWidth,\n          mapHeight = _a.mapHeight;\n      var screenToMapTransform = _this.state.screenToMapTransform;\n      var scale = screenToMapTransform.k * (_this.useMapWidth ? _this.screenWidth / mapWidth : _this.screenHeight / mapHeight);\n\n      _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.scale(scale).translate(screenToMapTransform.x, screenToMapTransform.y));\n\n      _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n    };\n\n    _this.handleAdapt = function () {\n      var contentRange = _this.props.contentRange;\n\n      if (!(contentRange && contentRange.length === 2)) {\n        console.warn('请正确传入 contentRange 值');\n        return;\n      }\n\n      var componentWidth = contentRange[1].x - contentRange[0].x;\n      var componentHeight = contentRange[1].y - contentRange[0].y;\n      var x = _this.screenWidth / 2 - (contentRange[0].x + contentRange[1].x) / 2;\n      var y = _this.screenHeight / 2 - (contentRange[0].y + contentRange[1].y) / 2;\n      var scale = Math.min(_this.screenWidth / componentWidth * MINI_MAP_RATIO, _this.screenHeight / componentHeight * MINI_MAP_RATIO, 1);\n      var P0 = [_this.screenWidth / 2, _this.screenHeight / 2];\n      var P1 = d3_zoom_1.zoomIdentity.translate(x, y).scale(1).invert(P0);\n      var newTransform = d3_zoom_1.zoomIdentity.translate(P0[0] - P1[0] * scale, P0[1] - P1[1] * scale).scale(scale);\n\n      _this.handleApplyTransform(newTransform);\n    };\n\n    _this.handleResetStatus = function () {\n      setTimeout(function () {\n        _this.getScreenToMapTransform();\n\n        _this.handleResetPosition();\n      }, 100);\n    };\n\n    _this.handleResize = function (isLarger) {\n      var RATE = isLarger ? 1.2 : 0.8;\n      var newScale = _this.transform.k * RATE;\n\n      _this.handleResizeTo(newScale / _this.minimapTransform.k);\n    };\n\n    _this.handleResizeTo = function (newScale, P0) {\n      var screenScale = newScale * _this.minimapTransform.k;\n\n      if (!P0) {\n        P0 = [_this.screenWidth / 2, _this.screenHeight / 2];\n      }\n\n      var P1 = _this.transform.invert(P0);\n\n      _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.translate(P0[0] - P1[0] * screenScale, P0[1] - P1[1] * screenScale).scale(screenScale));\n\n      _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n    };\n\n    _this.handleLocation = function (point) {\n      _this.setState({\n        animation: true\n      }, function () {\n        var k = _this.transform.k;\n        var newTransform = d3_zoom_1.zoomIdentity.translate(-point.x * k + _this.screenWidth / 2, -point.y * k + _this.screenHeight / 2).scale(k);\n\n        _this.handleApplyTransform(newTransform);\n      });\n    };\n\n    _this.handleFocusTarget = function (evt, focusEnabled) {\n      if (_this.props.focusEnabled !== focusEnabled) {\n        return;\n      }\n\n      var e = evt.currentTarget;\n      var dim = e.getBoundingClientRect();\n      var x = evt.clientX - dim.left;\n      var y = evt.clientY - dim.top;\n      var _a = _this.state.screenToMapTransform,\n          tx = _a.x,\n          ty = _a.y,\n          k = _a.k;\n      var cx = x / k - tx;\n      var cy = y / k - ty;\n\n      _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n\n      _this.screenTransform = _this.transform;\n      var tx1 = _this.screenWidth / 2 - _this.transform.k * cx;\n      var ty1 = _this.screenHeight / 2 - _this.transform.k * cy;\n\n      _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.translate(tx1, ty1).scale(_this.transform.k));\n    };\n\n    _this.rectRef = React.createRef();\n    return _this;\n  }\n\n  ReScreen.prototype.componentDidMount = function () {\n    this.init();\n    this.initEvent();\n    this.bindZoom();\n    this.getScreenHandler();\n    this.setState({\n      showMiniMap: this.checkShowMiniMap()\n    });\n  };\n\n  ReScreen.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.needRefresh) {\n      this.getScreenToMapTransform();\n    }\n  };\n\n  ReScreen.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this.state.showMiniMap !== prevState.showMiniMap) {\n      if (this.props.autoHideMiniMap && this.props.onMiniMapShowAndHide) {\n        this.props.onMiniMapShowAndHide(this.state.showMiniMap);\n      }\n    }\n\n    if (this.props.contentRange && this.props.contentRange.length && (prevProps.contentRange.length !== this.props.contentRange.length || prevProps.contentRange[0].x !== this.props.contentRange[0].x || prevProps.contentRange[0].y !== this.props.contentRange[0].y || prevProps.contentRange[1].x !== this.props.contentRange[1].x || prevProps.contentRange[1].y !== this.props.contentRange[1].y)) {\n      this.getScreenToMapTransform();\n    }\n  };\n\n  ReScreen.prototype.componentWillUnmount = function () {\n    window.removeEventListener('resize', this.handleBrowserResizeFn);\n  };\n\n  ReScreen.prototype.init = function () {\n    this.getScreenSize();\n    this.getScreenToMapTransform();\n  };\n\n  ReScreen.prototype.initEvent = function () {\n    this.handleBrowserResizeFn = this.init.bind(this);\n    window.addEventListener('resize', this.handleBrowserResizeFn);\n  };\n\n  ReScreen.prototype.getScreenHandler = function () {\n    var getScreenHandler = this.props.getScreenHandler;\n\n    if (getScreenHandler) {\n      getScreenHandler({\n        handleFullScreen: this.handleFullScreen,\n        handleResetPosition: this.handleResetPosition,\n        handleShowAll: this.handleShowAll,\n        handleResetStatus: this.handleResetStatus,\n        handleResize: this.handleResize,\n        handleResizeTo: this.handleResizeTo,\n        handleFocusTarget: this.handleFocusTarget,\n        handleApplyTransform: this.handleApplyTransform,\n        handleAdapt: this.handleAdapt,\n        handleLocation: this.handleLocation,\n        screenWidth: this.screenWidth,\n        screenHeight: this.screenHeight,\n        handleSyncMiniMapView: this.handleSyncMiniMapView\n      });\n    }\n  };\n\n  ReScreen.prototype.filter = function (isMiniMap) {\n    var enabled = isMiniMap ? this.props.miniMapZoomEnabled : this.props.zoomEnabled;\n\n    if (!enabled) {\n      return d3Select.event.type !== 'wheel';\n    }\n\n    return !d3Select.event.button;\n  };\n\n  ReScreen.prototype.bindZoom = function () {\n    var _this = this;\n\n    var _a = this.props,\n        scaleExtent = _a.scaleExtent,\n        translateExtent = _a.translateExtent,\n        draggable = _a.draggable;\n    this.screenZoom = d3_zoom_1.zoom().filter(this.filter.bind(this, false)).scaleExtent(scaleExtent ? scaleExtent : [0, Infinity]).translateExtent(translateExtent ? translateExtent : [[-Infinity, -Infinity], [Infinity, Infinity]]).on('zoom', function () {\n      var scale = d3Select.event.transform.k / _this.minimapTransform.k;\n\n      if (!_this.isZoomValid(scale)) {\n        return _this.screen.call(_this.screenZoom.transform, _this.screenTransform);\n      }\n\n      if (draggable) {\n        _this.screenTransform = d3Select.event.transform;\n\n        _this.handleScreenChange();\n      }\n    });\n    this.screen && this.screen.call(this.screenZoom).on('dblclick.zoom', null);\n\n    if (this.props.needMinimap) {\n      this.mapZoom = d3_zoom_1.zoom().filter(this.filter.bind(this, true)).on('zoom', function () {\n        var scale = _this.screenTransform.k / d3Select.event.transform.k;\n\n        if (!_this.isZoomValid(scale)) {\n          return _this.minimap.call(_this.mapZoom.transform, _this.minimapTransform);\n        }\n\n        if (draggable) {\n          _this.minimapTransform = d3Select.event.transform;\n\n          _this.handleScreenChange();\n        }\n      });\n      this.minimap && this.minimap.call(this.mapZoom).on('dblclick.zoom', null);\n    }\n  };\n\n  ReScreen.prototype.isZoomValid = function (newScale) {\n    var currentScale = this.transform.k;\n\n    if (newScale <= this.props.minZoom && newScale < currentScale) {\n      return false;\n    }\n\n    if (newScale >= this.props.maxZoom && newScale > currentScale) {\n      return false;\n    }\n\n    return true;\n  };\n\n  ReScreen.prototype.getScreenSize = function () {\n    if (!this.ReScreenDOM) {\n      return;\n    }\n\n    var ReScreenWidth = this.ReScreenDOM.clientWidth;\n    var ReScreenHeight = this.ReScreenDOM.clientHeight;\n    var _a = this.props,\n        needMinimap = _a.needMinimap,\n        mapPosition = _a.mapPosition,\n        mapWidth = _a.mapWidth,\n        mapHeight = _a.mapHeight,\n        mapPadding = _a.mapPadding;\n\n    if (mapPosition.includes('IN')) {\n      this.screenWidth = ReScreenWidth;\n      this.screenHeight = ReScreenHeight;\n    } else {\n      this.screenWidth = needMinimap ? ReScreenWidth - mapWidth - mapPadding : ReScreenWidth;\n      this.screenHeight = ReScreenHeight;\n    }\n\n    if (this.screenWidth < 0) {\n      this.screenWidth = 0;\n    }\n  };\n\n  ReScreen.prototype.getBBox = function () {\n    var _a = this.props,\n        type = _a.type,\n        contentRange = _a.contentRange;\n\n    if (contentRange && contentRange.length === 2) {\n      return {\n        x: contentRange[0].x,\n        y: contentRange[0].y,\n        width: contentRange[1].x - contentRange[0].x,\n        height: contentRange[1].y - contentRange[0].y\n      };\n    }\n\n    if (type === 'SVG') {\n      return this.screenDOM && this.screenDOM.getBBox();\n    } else if (type === 'DOM') {\n      return {\n        x: 0,\n        y: 0,\n        width: this.screenDOM.firstChild.scrollWidth,\n        height: this.screenDOM.firstChild.scrollHeight\n      };\n    }\n  };\n\n  ReScreen.prototype.handleScreenChange = function () {\n    var screenTransform = this.screenTransform;\n    var minimapTransform = this.minimapTransform;\n    var transform = d3_zoom_1.zoomIdentity.translate(screenTransform.x, screenTransform.y).scale(screenTransform.k).translate(-1 * minimapTransform.x / minimapTransform.k, -1 * minimapTransform.y / minimapTransform.k).scale(1 / minimapTransform.k);\n    var finalTransform;\n\n    if (this.props.dragDirection === 'HOR') {\n      finalTransform = d3_zoom_1.zoomIdentity.translate(transform.x, 0).scale(transform.k);\n    } else if (this.props.dragDirection === 'VER') {\n      finalTransform = d3_zoom_1.zoomIdentity.translate(0, transform.y).scale(transform.k);\n    } else {\n      finalTransform = transform;\n    }\n\n    var onScreenChange = this.props.onScreenChange;\n    this.applyTransform(finalTransform);\n    onScreenChange && onScreenChange(finalTransform);\n  };\n\n  ReScreen.prototype.cancelAnimation = function () {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.setState({\n        animation: false\n      });\n    }, ANIMATION_TIME);\n  };\n\n  ReScreen.prototype.renderButtons = function (Buttons) {\n    return React.cloneElement(Buttons, {\n      handleFullScreen: this.handleFullScreen,\n      handleResetPosition: this.handleResetPosition,\n      handleShowAll: this.handleShowAll,\n      handleResetStatus: this.handleResetStatus,\n      handleResize: this.handleResize,\n      screenWidth: this.screenWidth,\n      screenHeight: this.screenHeight\n    });\n  };\n\n  ReScreen.prototype.clReScreenContent = function (screenToMapTransform) {\n    if (this.props.minimap || !this.screenDOM) {\n      return;\n    }\n\n    var screenToMap = \"scale(\" + screenToMapTransform.k + \") translate(\" + screenToMapTransform.x + \", \" + screenToMapTransform.y + \")\";\n    var screenContent = this.screenDOM.cloneNode(true);\n    screenContent.style.height = '100%';\n    screenContent.style.width = '100%';\n\n    if (this.props.type === 'SVG') {\n      screenContent.firstChild.setAttribute('transform', screenToMap);\n    } else {\n      screenContent.firstChild.style.transform = \"translate(\" + screenToMapTransform.x + \"px, \" + screenToMapTransform.y + \"px) scale(\" + screenToMapTransform.k + \")\";\n      screenContent.firstChild.style.transformOrigin = '0 0';\n    }\n\n    var targetNode = document.getElementById('minimap');\n    targetNode.innerHTML = '';\n    targetNode.appendChild(screenContent);\n  };\n\n  ReScreen.prototype.renderCustomMiniMap = function () {\n    var screenToMapTransform = this.state.screenToMapTransform;\n    var transform = this.transform;\n    var screenToMap = \"translate(\" + screenToMapTransform.x + \"px, \" + screenToMapTransform.y + \"px) scale(\" + screenToMapTransform.k + \")\";\n\n    if (!this.props.minimap) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        transform: screenToMap,\n        transformOrigin: '0 0'\n      }\n    }, typeof this.props.minimap === 'function' ? this.props.minimap({\n      screenToMapTransform: screenToMapTransform,\n      transform: transform\n    }) : React.cloneElement(this.props.minimap, {\n      screenToMapTransform: screenToMapTransform,\n      transform: transform\n    }), \">\");\n  };\n\n  ReScreen.prototype.checkShowMiniMap = function () {\n    var _a = this.props,\n        contentRange = _a.contentRange,\n        autoHideMiniMap = _a.autoHideMiniMap,\n        needMinimap = _a.needMinimap;\n    var transform = this.transform;\n\n    if (!needMinimap) {\n      return false;\n    }\n\n    if (!(contentRange && contentRange.length === 2)) {\n      console.warn('请正确传入 contentRange 值');\n      return true;\n    }\n\n    if (!autoHideMiniMap) {\n      return true;\n    }\n\n    var k = transform.k,\n        x = transform.x,\n        y = transform.y;\n    var currRange = [{\n      x: (0 - x) / k,\n      y: (0 - y) / k\n    }, {\n      x: (this.screenWidth - x) / k,\n      y: (this.screenHeight - y) / k\n    }];\n\n    if (currRange[0].x < contentRange[0].x && currRange[0].y < contentRange[0].y && currRange[1].x > contentRange[1].x && currRange[1].y > contentRange[1].y) {\n      return false;\n    }\n\n    return true;\n  };\n\n  ReScreen.prototype.renderMinimap = function (mapWidth, mapHeight, mapPosition) {\n    var _this = this;\n\n    var _a = this.state,\n        screenToMapTransform = _a.screenToMapTransform,\n        showMiniMap = _a.showMiniMap;\n    var className = 'map-ctrl';\n\n    if (!showMiniMap) {\n      className += ' map-ctrl-hidden';\n    }\n\n    if (this.state.animation) {\n      className += ' map-ctrl-animation';\n    }\n\n    return React.createElement(\"div\", {\n      className: className,\n      onDoubleClick: function (e) {\n        return _this.handleFocusTarget(e, 2);\n      },\n      onClick: function (e) {\n        return _this.handleFocusTarget(e, 1);\n      },\n      style: tslib_1.__assign({\n        width: mapWidth + 'px',\n        height: mapHeight + 'px'\n      }, utils_1.getMapStyle(mapPosition))\n    }, React.createElement(\"div\", {\n      id: \"minimap\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, this.renderCustomMiniMap()), React.createElement(\"svg\", {\n      className: \"map-visible-rect\",\n      width: \"100%\",\n      height: \"100%\"\n    }, React.createElement(\"g\", {\n      ref: function (ele) {\n        _this.minimap = d3Select.select(ele);\n      },\n      transform: \"translate(\" + screenToMapTransform.x + \", \" + screenToMapTransform.y + \") scale(\" + screenToMapTransform.k + \")\"\n    }, React.createElement(\"rect\", tslib_1.__assign({\n      width: this.screenWidth,\n      height: this.screenHeight,\n      fill: \"rgba(200, 200, 200, .5)\",\n      stroke: \"none\",\n      ref: this.rectRef\n    }, this.props.mapRectStyle)))));\n  };\n\n  ReScreen.prototype.renderScreenContent = function () {\n    var _this = this;\n\n    var _a = this.props,\n        type = _a.type,\n        screenHeight = _a.screenHeight;\n    var width = this.screenWidth || '100%';\n    var height = screenHeight ? screenHeight : this.screenHeight || '100%';\n\n    if (type === 'SVG') {\n      return React.cloneElement(this.props.children, {\n        ref: function (ele) {\n          if (_this.screen) {\n            return;\n          }\n\n          _this.screenDOM = ele;\n          _this.screen = d3Select.select(ele);\n\n          if (utils_1.isValidSVG(_this.screen)) {\n            _this.screenContent = d3Select.select(ele && ele.firstChild);\n          } else {\n            return console.log('请确保svg内部用g包裹起来！');\n          }\n        },\n        width: width,\n        height: height\n      });\n    } else if (type === 'DOM') {\n      return React.createElement(\"div\", {\n        style: {\n          width: width,\n          height: height,\n          overflow: 'hidden'\n        },\n        ref: function (ele) {\n          if (_this.screen) {\n            return;\n          }\n\n          _this.screenDOM = ele;\n          _this.screen = d3Select.select(ele);\n        }\n      }, React.cloneElement(this.props.children, {\n        ref: function (ele) {\n          _this.screenContent = d3Select.select(ele);\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  ReScreen.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        needMinimap = _a.needMinimap,\n        Buttons = _a.Buttons,\n        width = _a.width,\n        height = _a.height,\n        mapWidth = _a.mapWidth,\n        mapHeight = _a.mapHeight,\n        mapPosition = _a.mapPosition;\n    var className = this.state.animation ? 'screen screen-animation' : 'screen';\n    return React.createElement(\"div\", {\n      className: \"regraph\",\n      ref: function (ele) {\n        _this.ReScreenDOM = ele;\n      },\n      style: tslib_1.__assign({\n        width: width,\n        height: height\n      }, utils_1.getContainerStyle(mapPosition)),\n      onClick: this.props.onClick,\n      onContextMenu: this.props.onContextMenu,\n      onDrop: this.props.onDrop,\n      onDragOver: this.props.onDragOver\n    }, React.createElement(\"div\", {\n      className: className\n    }, this.renderScreenContent(), Buttons && this.renderButtons(Buttons)), needMinimap && this.renderMinimap(mapWidth, mapHeight, mapPosition));\n  };\n\n  ReScreen.defaultProps = {\n    type: 'SVG',\n    width: '100%',\n    height: '100%',\n    needMinimap: true,\n    zoomEnabled: true,\n    minZoom: 0.01,\n    maxZoom: 100,\n    dragDirection: 'ALL',\n    mapPosition: 'RT',\n    mapWidth: 100,\n    mapHeight: 100,\n    mapPadding: 20,\n    autoHideMiniMap: false,\n    miniMapZoomEnabled: false,\n    draggable: true\n  };\n  return ReScreen;\n}(React.Component);\n\nexports.default = ReScreen;","map":{"version":3,"sources":["../../src/ReScreen/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar d3_zoom_1 = require(\"d3-zoom\");\nvar d3Select = require(\"d3-selection\");\nvar utils_1 = require(\"./utils\");\nrequire(\"./ReScreen.css\");\nvar MINI_MAP_RATIO = 0.9;\nvar ANIMATION_TIME = 500;\nvar ButtonsProps = (function () {\n    function ButtonsProps() {\n    }\n    return ButtonsProps;\n}());\nexports.ButtonsProps = ButtonsProps;\nvar MiniMapProps = (function () {\n    function MiniMapProps() {\n    }\n    return MiniMapProps;\n}());\nvar Props = (function () {\n    function Props() {\n        this.onClick = function () { };\n        this.onContextMenu = function () { };\n        this.onDragOver = function () { };\n        this.onDrop = function () { };\n    }\n    return Props;\n}());\nvar State = (function () {\n    function State() {\n    }\n    return State;\n}());\nvar ReScreen = (function (_super) {\n    tslib_1.__extends(ReScreen, _super);\n    function ReScreen(props) {\n        var _this = _super.call(this, props) || this;\n        _this.useMapWidth = true;\n        _this.screenWidth = 0;\n        _this.screenHeight = 0;\n        _this.screenTransform = d3_zoom_1.zoomIdentity;\n        _this.minimapTransform = d3_zoom_1.zoomIdentity;\n        _this.transform = d3_zoom_1.zoomIdentity;\n        _this.state = {\n            screenToMapTransform: d3_zoom_1.zoomIdentity,\n            animation: false,\n            showMiniMap: false\n        };\n        _this.handleSyncMiniMapView = function () {\n            _this.getScreenToMapTransform();\n        };\n        _this.getScreenToMapTransform = function () {\n            var BBox = _this.getBBox();\n            var _a = _this.props, type = _a.type, mapWidth = _a.mapWidth, mapHeight = _a.mapHeight, contentRange = _a.contentRange;\n            var x = BBox.x;\n            var y = BBox.y;\n            _this.useMapWidth = (mapWidth / BBox.width) * BBox.height < mapHeight;\n            var k = (_this.useMapWidth ? mapWidth / BBox.width : mapHeight / BBox.height) * MINI_MAP_RATIO;\n            var screenToMapTransform;\n            if (contentRange && contentRange.length === 2) {\n                var x_1 = mapWidth / 2 - (contentRange[0].x + contentRange[1].x) / 2;\n                var y_1 = mapHeight / 2 - (contentRange[0].y + contentRange[1].y) / 2;\n                var P0 = [mapWidth / 2, mapHeight / 2];\n                var P1 = d3_zoom_1.zoomIdentity\n                    .translate(x_1, y_1)\n                    .scale(1)\n                    .invert(P0);\n                screenToMapTransform = d3_zoom_1.zoomIdentity.translate(P0[0] - P1[0] * k, P0[1] - P1[1] * k).scale(k);\n            }\n            else if (type === 'SVG') {\n                var xx = -1 * _this.transform.invertX(x);\n                var yy = -1 * _this.transform.invertY(y);\n                screenToMapTransform = d3_zoom_1.zoomIdentity.translate(xx, yy).scale(k * _this.transform.k);\n            }\n            else if (type === 'DOM') {\n                screenToMapTransform = d3_zoom_1.zoomIdentity.translate(-x, -y).scale(k);\n            }\n            _this.setState({\n                screenToMapTransform: screenToMapTransform\n            }, _this.props.resetNeedRefresh);\n            _this.props.needMinimap && _this.clReScreenContent(screenToMapTransform);\n        };\n        _this.applyTransform = function (transform) {\n            var _a = _this.props, type = _a.type, mapRectStyle = _a.mapRectStyle;\n            var screenToMapTransform = _this.state.screenToMapTransform;\n            if (type === 'SVG') {\n                _this.screenContent &&\n                    _this.screenContent.attr('transform', \"translate(\" + transform.x + \", \" + transform.y + \") scale(\" + transform.k + \")\");\n            }\n            else if (type === 'DOM') {\n                _this.screenContent &&\n                    _this.screenContent.style('transform', \"translate(\" + transform.x + \"px, \" + transform.y + \"px) scale(\" + transform.k + \")\");\n                _this.screenContent && _this.screenContent.style('transform-origin', '0 0');\n            }\n            _this.transform = d3_zoom_1.zoomIdentity.translate(transform.x, transform.y).scale(transform.k);\n            if (_this.rectRef.current) {\n                var strokeWidth = (mapRectStyle || {}).strokeWidth;\n                _this.rectRef.current.style.x = -_this.transform.x;\n                _this.rectRef.current.style.y = -_this.transform.y;\n                _this.rectRef.current.style.transform = \"scale(\" + 1 / transform.k + \")\";\n                _this.rectRef.current.style.strokeWidth =\n                    strokeWidth !== undefined ? strokeWidth * (1 / screenToMapTransform.k) * transform.k : undefined;\n            }\n            var showMiniMap = _this.checkShowMiniMap();\n            if (showMiniMap !== _this.state.showMiniMap) {\n                _this.setState({\n                    showMiniMap: showMiniMap\n                }, function () {\n                    _this.cancelAnimation();\n                });\n            }\n        };\n        _this.handleApplyTransform = function (transform) {\n            _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.translate(transform.x, transform.y).scale(transform.k));\n            _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n        };\n        _this.handleFullScreen = function () {\n            var isFull = document.fullscreenElement || document.webkitFullscreenElement;\n            if (isFull) {\n                utils_1.exitFullscreen();\n            }\n            else {\n                utils_1.requestFullscreen(_this.screenDOM);\n            }\n        };\n        _this.handleResetPosition = function () {\n            _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity);\n            _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n        };\n        _this.handleShowAll = function () {\n            console.warn('handleShowAll 计划下线，适应画布请添加 contentRange 使用 handleAdapt 方法');\n            var _a = _this.props, mapWidth = _a.mapWidth, mapHeight = _a.mapHeight;\n            var screenToMapTransform = _this.state.screenToMapTransform;\n            var scale = screenToMapTransform.k * (_this.useMapWidth ? _this.screenWidth / mapWidth : _this.screenHeight / mapHeight);\n            _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.scale(scale).translate(screenToMapTransform.x, screenToMapTransform.y));\n            _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n        };\n        _this.handleAdapt = function () {\n            var contentRange = _this.props.contentRange;\n            if (!(contentRange && contentRange.length === 2)) {\n                console.warn('请正确传入 contentRange 值');\n                return;\n            }\n            var componentWidth = contentRange[1].x - contentRange[0].x;\n            var componentHeight = contentRange[1].y - contentRange[0].y;\n            var x = _this.screenWidth / 2 - (contentRange[0].x + contentRange[1].x) / 2;\n            var y = _this.screenHeight / 2 - (contentRange[0].y + contentRange[1].y) / 2;\n            var scale = Math.min((_this.screenWidth / componentWidth) * MINI_MAP_RATIO, (_this.screenHeight / componentHeight) * MINI_MAP_RATIO, 1);\n            var P0 = [_this.screenWidth / 2, _this.screenHeight / 2];\n            var P1 = d3_zoom_1.zoomIdentity\n                .translate(x, y)\n                .scale(1)\n                .invert(P0);\n            var newTransform = d3_zoom_1.zoomIdentity.translate(P0[0] - P1[0] * scale, P0[1] - P1[1] * scale).scale(scale);\n            _this.handleApplyTransform(newTransform);\n        };\n        _this.handleResetStatus = function () {\n            setTimeout(function () {\n                _this.getScreenToMapTransform();\n                _this.handleResetPosition();\n            }, 100);\n        };\n        _this.handleResize = function (isLarger) {\n            var RATE = isLarger ? 1.2 : 0.8;\n            var newScale = _this.transform.k * RATE;\n            _this.handleResizeTo(newScale / _this.minimapTransform.k);\n        };\n        _this.handleResizeTo = function (newScale, P0) {\n            var screenScale = newScale * _this.minimapTransform.k;\n            if (!P0) {\n                P0 = [_this.screenWidth / 2, _this.screenHeight / 2];\n            }\n            var P1 = _this.transform.invert(P0);\n            _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity\n                .translate(P0[0] - P1[0] * screenScale, P0[1] - P1[1] * screenScale)\n                .scale(screenScale));\n            _this.minimap && _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n        };\n        _this.handleLocation = function (point) {\n            _this.setState({\n                animation: true\n            }, function () {\n                var k = _this.transform.k;\n                var newTransform = d3_zoom_1.zoomIdentity\n                    .translate(-point.x * k + _this.screenWidth / 2, -point.y * k + _this.screenHeight / 2)\n                    .scale(k);\n                _this.handleApplyTransform(newTransform);\n            });\n        };\n        _this.handleFocusTarget = function (evt, focusEnabled) {\n            if (_this.props.focusEnabled !== focusEnabled) {\n                return;\n            }\n            var e = evt.currentTarget;\n            var dim = e.getBoundingClientRect();\n            var x = evt.clientX - dim.left;\n            var y = evt.clientY - dim.top;\n            var _a = _this.state.screenToMapTransform, tx = _a.x, ty = _a.y, k = _a.k;\n            var cx = x / k - tx;\n            var cy = y / k - ty;\n            _this.minimap.call(_this.mapZoom.transform, d3_zoom_1.zoomIdentity);\n            _this.screenTransform = _this.transform;\n            var tx1 = _this.screenWidth / 2 - _this.transform.k * cx;\n            var ty1 = _this.screenHeight / 2 - _this.transform.k * cy;\n            _this.screen.call(_this.screenZoom.transform, d3_zoom_1.zoomIdentity.translate(tx1, ty1).scale(_this.transform.k));\n        };\n        _this.rectRef = React.createRef();\n        return _this;\n    }\n    ReScreen.prototype.componentDidMount = function () {\n        this.init();\n        this.initEvent();\n        this.bindZoom();\n        this.getScreenHandler();\n        this.setState({\n            showMiniMap: this.checkShowMiniMap()\n        });\n    };\n    ReScreen.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.needRefresh) {\n            this.getScreenToMapTransform();\n        }\n    };\n    ReScreen.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (this.state.showMiniMap !== prevState.showMiniMap) {\n            if (this.props.autoHideMiniMap && this.props.onMiniMapShowAndHide) {\n                this.props.onMiniMapShowAndHide(this.state.showMiniMap);\n            }\n        }\n        if (this.props.contentRange &&\n            this.props.contentRange.length &&\n            (prevProps.contentRange.length !== this.props.contentRange.length ||\n                prevProps.contentRange[0].x !== this.props.contentRange[0].x ||\n                prevProps.contentRange[0].y !== this.props.contentRange[0].y ||\n                prevProps.contentRange[1].x !== this.props.contentRange[1].x ||\n                prevProps.contentRange[1].y !== this.props.contentRange[1].y)) {\n            this.getScreenToMapTransform();\n        }\n    };\n    ReScreen.prototype.componentWillUnmount = function () {\n        window.removeEventListener('resize', this.handleBrowserResizeFn);\n    };\n    ReScreen.prototype.init = function () {\n        this.getScreenSize();\n        this.getScreenToMapTransform();\n    };\n    ReScreen.prototype.initEvent = function () {\n        this.handleBrowserResizeFn = this.init.bind(this);\n        window.addEventListener('resize', this.handleBrowserResizeFn);\n    };\n    ReScreen.prototype.getScreenHandler = function () {\n        var getScreenHandler = this.props.getScreenHandler;\n        if (getScreenHandler) {\n            getScreenHandler({\n                handleFullScreen: this.handleFullScreen,\n                handleResetPosition: this.handleResetPosition,\n                handleShowAll: this.handleShowAll,\n                handleResetStatus: this.handleResetStatus,\n                handleResize: this.handleResize,\n                handleResizeTo: this.handleResizeTo,\n                handleFocusTarget: this.handleFocusTarget,\n                handleApplyTransform: this.handleApplyTransform,\n                handleAdapt: this.handleAdapt,\n                handleLocation: this.handleLocation,\n                screenWidth: this.screenWidth,\n                screenHeight: this.screenHeight,\n                handleSyncMiniMapView: this.handleSyncMiniMapView\n            });\n        }\n    };\n    ReScreen.prototype.filter = function (isMiniMap) {\n        var enabled = isMiniMap ? this.props.miniMapZoomEnabled : this.props.zoomEnabled;\n        if (!enabled) {\n            return d3Select.event.type !== 'wheel';\n        }\n        return !d3Select.event.button;\n    };\n    ReScreen.prototype.bindZoom = function () {\n        var _this = this;\n        var _a = this.props, scaleExtent = _a.scaleExtent, translateExtent = _a.translateExtent, draggable = _a.draggable;\n        this.screenZoom = d3_zoom_1.zoom()\n            .filter(this.filter.bind(this, false))\n            .scaleExtent(scaleExtent ? scaleExtent : [0, Infinity])\n            .translateExtent(translateExtent\n            ? translateExtent\n            : [\n                [-Infinity, -Infinity],\n                [Infinity, Infinity]\n            ])\n            .on('zoom', function () {\n            var scale = d3Select.event.transform.k / _this.minimapTransform.k;\n            if (!_this.isZoomValid(scale)) {\n                return _this.screen.call(_this.screenZoom.transform, _this.screenTransform);\n            }\n            if (draggable) {\n                _this.screenTransform = d3Select.event.transform;\n                _this.handleScreenChange();\n            }\n        });\n        this.screen && this.screen.call(this.screenZoom).on('dblclick.zoom', null);\n        if (this.props.needMinimap) {\n            this.mapZoom = d3_zoom_1.zoom()\n                .filter(this.filter.bind(this, true))\n                .on('zoom', function () {\n                var scale = _this.screenTransform.k / d3Select.event.transform.k;\n                if (!_this.isZoomValid(scale)) {\n                    return _this.minimap.call(_this.mapZoom.transform, _this.minimapTransform);\n                }\n                if (draggable) {\n                    _this.minimapTransform = d3Select.event.transform;\n                    _this.handleScreenChange();\n                }\n            });\n            this.minimap && this.minimap.call(this.mapZoom).on('dblclick.zoom', null);\n        }\n    };\n    ReScreen.prototype.isZoomValid = function (newScale) {\n        var currentScale = this.transform.k;\n        if (newScale <= this.props.minZoom && newScale < currentScale) {\n            return false;\n        }\n        if (newScale >= this.props.maxZoom && newScale > currentScale) {\n            return false;\n        }\n        return true;\n    };\n    ReScreen.prototype.getScreenSize = function () {\n        if (!this.ReScreenDOM) {\n            return;\n        }\n        var ReScreenWidth = this.ReScreenDOM.clientWidth;\n        var ReScreenHeight = this.ReScreenDOM.clientHeight;\n        var _a = this.props, needMinimap = _a.needMinimap, mapPosition = _a.mapPosition, mapWidth = _a.mapWidth, mapHeight = _a.mapHeight, mapPadding = _a.mapPadding;\n        if (mapPosition.includes('IN')) {\n            this.screenWidth = ReScreenWidth;\n            this.screenHeight = ReScreenHeight;\n        }\n        else {\n            this.screenWidth = needMinimap ? ReScreenWidth - mapWidth - mapPadding : ReScreenWidth;\n            this.screenHeight = ReScreenHeight;\n        }\n        if (this.screenWidth < 0) {\n            this.screenWidth = 0;\n        }\n    };\n    ReScreen.prototype.getBBox = function () {\n        var _a = this.props, type = _a.type, contentRange = _a.contentRange;\n        if (contentRange && contentRange.length === 2) {\n            return {\n                x: contentRange[0].x,\n                y: contentRange[0].y,\n                width: contentRange[1].x - contentRange[0].x,\n                height: contentRange[1].y - contentRange[0].y\n            };\n        }\n        if (type === 'SVG') {\n            return this.screenDOM && this.screenDOM.getBBox();\n        }\n        else if (type === 'DOM') {\n            return {\n                x: 0,\n                y: 0,\n                width: this.screenDOM.firstChild.scrollWidth,\n                height: this.screenDOM.firstChild.scrollHeight\n            };\n        }\n    };\n    ReScreen.prototype.handleScreenChange = function () {\n        var screenTransform = this.screenTransform;\n        var minimapTransform = this.minimapTransform;\n        var transform = d3_zoom_1.zoomIdentity\n            .translate(screenTransform.x, screenTransform.y)\n            .scale(screenTransform.k)\n            .translate((-1 * minimapTransform.x) / minimapTransform.k, (-1 * minimapTransform.y) / minimapTransform.k)\n            .scale(1 / minimapTransform.k);\n        var finalTransform;\n        if (this.props.dragDirection === 'HOR') {\n            finalTransform = d3_zoom_1.zoomIdentity.translate(transform.x, 0).scale(transform.k);\n        }\n        else if (this.props.dragDirection === 'VER') {\n            finalTransform = d3_zoom_1.zoomIdentity.translate(0, transform.y).scale(transform.k);\n        }\n        else {\n            finalTransform = transform;\n        }\n        var onScreenChange = this.props.onScreenChange;\n        this.applyTransform(finalTransform);\n        onScreenChange && onScreenChange(finalTransform);\n    };\n    ReScreen.prototype.cancelAnimation = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.setState({\n                animation: false\n            });\n        }, ANIMATION_TIME);\n    };\n    ReScreen.prototype.renderButtons = function (Buttons) {\n        return React.cloneElement(Buttons, {\n            handleFullScreen: this.handleFullScreen,\n            handleResetPosition: this.handleResetPosition,\n            handleShowAll: this.handleShowAll,\n            handleResetStatus: this.handleResetStatus,\n            handleResize: this.handleResize,\n            screenWidth: this.screenWidth,\n            screenHeight: this.screenHeight\n        });\n    };\n    ReScreen.prototype.clReScreenContent = function (screenToMapTransform) {\n        if (this.props.minimap || !this.screenDOM) {\n            return;\n        }\n        var screenToMap = \"scale(\" + screenToMapTransform.k + \") translate(\" + screenToMapTransform.x + \", \" + screenToMapTransform.y + \")\";\n        var screenContent = this.screenDOM.cloneNode(true);\n        screenContent.style.height = '100%';\n        screenContent.style.width = '100%';\n        if (this.props.type === 'SVG') {\n            screenContent.firstChild.setAttribute('transform', screenToMap);\n        }\n        else {\n            screenContent.firstChild.style.transform = \"translate(\" + screenToMapTransform.x + \"px, \" + screenToMapTransform.y + \"px) scale(\" + screenToMapTransform.k + \")\";\n            screenContent.firstChild.style.transformOrigin = '0 0';\n        }\n        var targetNode = document.getElementById('minimap');\n        targetNode.innerHTML = '';\n        targetNode.appendChild(screenContent);\n    };\n    ReScreen.prototype.renderCustomMiniMap = function () {\n        var screenToMapTransform = this.state.screenToMapTransform;\n        var transform = this.transform;\n        var screenToMap = \"translate(\" + screenToMapTransform.x + \"px, \" + screenToMapTransform.y + \"px) scale(\" + screenToMapTransform.k + \")\";\n        if (!this.props.minimap) {\n            return null;\n        }\n        return (React.createElement(\"div\", { style: {\n                transform: screenToMap,\n                transformOrigin: '0 0'\n            } },\n            typeof this.props.minimap === 'function'\n                ? this.props.minimap({\n                    screenToMapTransform: screenToMapTransform,\n                    transform: transform\n                })\n                : React.cloneElement(this.props.minimap, {\n                    screenToMapTransform: screenToMapTransform,\n                    transform: transform\n                }),\n            \">\"));\n    };\n    ReScreen.prototype.checkShowMiniMap = function () {\n        var _a = this.props, contentRange = _a.contentRange, autoHideMiniMap = _a.autoHideMiniMap, needMinimap = _a.needMinimap;\n        var transform = this.transform;\n        if (!needMinimap) {\n            return false;\n        }\n        if (!(contentRange && contentRange.length === 2)) {\n            console.warn('请正确传入 contentRange 值');\n            return true;\n        }\n        if (!autoHideMiniMap) {\n            return true;\n        }\n        var k = transform.k, x = transform.x, y = transform.y;\n        var currRange = [\n            { x: (0 - x) / k, y: (0 - y) / k },\n            { x: (this.screenWidth - x) / k, y: (this.screenHeight - y) / k }\n        ];\n        if (currRange[0].x < contentRange[0].x &&\n            currRange[0].y < contentRange[0].y &&\n            currRange[1].x > contentRange[1].x &&\n            currRange[1].y > contentRange[1].y) {\n            return false;\n        }\n        return true;\n    };\n    ReScreen.prototype.renderMinimap = function (mapWidth, mapHeight, mapPosition) {\n        var _this = this;\n        var _a = this.state, screenToMapTransform = _a.screenToMapTransform, showMiniMap = _a.showMiniMap;\n        var className = 'map-ctrl';\n        if (!showMiniMap) {\n            className += ' map-ctrl-hidden';\n        }\n        if (this.state.animation) {\n            className += ' map-ctrl-animation';\n        }\n        return (React.createElement(\"div\", { className: className, onDoubleClick: function (e) { return _this.handleFocusTarget(e, 2); }, onClick: function (e) { return _this.handleFocusTarget(e, 1); }, style: tslib_1.__assign({ width: mapWidth + 'px', height: mapHeight + 'px' }, utils_1.getMapStyle(mapPosition)) },\n            React.createElement(\"div\", { id: \"minimap\", style: { width: '100%', height: '100%' } }, this.renderCustomMiniMap()),\n            React.createElement(\"svg\", { className: \"map-visible-rect\", width: \"100%\", height: \"100%\" },\n                React.createElement(\"g\", { ref: function (ele) {\n                        _this.minimap = d3Select.select(ele);\n                    }, transform: \"translate(\" + screenToMapTransform.x + \", \" + screenToMapTransform.y + \") scale(\" + screenToMapTransform.k + \")\" }, React.createElement(\"rect\", tslib_1.__assign({ width: this.screenWidth, height: this.screenHeight, fill: \"rgba(200, 200, 200, .5)\", stroke: \"none\", ref: this.rectRef }, this.props.mapRectStyle))))));\n    };\n    ReScreen.prototype.renderScreenContent = function () {\n        var _this = this;\n        var _a = this.props, type = _a.type, screenHeight = _a.screenHeight;\n        var width = this.screenWidth || '100%';\n        var height = screenHeight ? screenHeight : this.screenHeight || '100%';\n        if (type === 'SVG') {\n            return React.cloneElement(this.props.children, {\n                ref: function (ele) {\n                    if (_this.screen) {\n                        return;\n                    }\n                    _this.screenDOM = ele;\n                    _this.screen = d3Select.select(ele);\n                    if (utils_1.isValidSVG(_this.screen)) {\n                        _this.screenContent = d3Select.select(ele && ele.firstChild);\n                    }\n                    else {\n                        return console.log('请确保svg内部用g包裹起来！');\n                    }\n                },\n                width: width,\n                height: height\n            });\n        }\n        else if (type === 'DOM') {\n            return (React.createElement(\"div\", { style: { width: width, height: height, overflow: 'hidden' }, ref: function (ele) {\n                    if (_this.screen) {\n                        return;\n                    }\n                    _this.screenDOM = ele;\n                    _this.screen = d3Select.select(ele);\n                } }, React.cloneElement(this.props.children, {\n                ref: function (ele) {\n                    _this.screenContent = d3Select.select(ele);\n                }\n            })));\n        }\n        else {\n            return null;\n        }\n    };\n    ReScreen.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, needMinimap = _a.needMinimap, Buttons = _a.Buttons, width = _a.width, height = _a.height, mapWidth = _a.mapWidth, mapHeight = _a.mapHeight, mapPosition = _a.mapPosition;\n        var className = this.state.animation ? 'screen screen-animation' : 'screen';\n        return (React.createElement(\"div\", { className: \"regraph\", ref: function (ele) {\n                _this.ReScreenDOM = ele;\n            }, style: tslib_1.__assign({ width: width,\n                height: height }, utils_1.getContainerStyle(mapPosition)), onClick: this.props.onClick, onContextMenu: this.props.onContextMenu, onDrop: this.props.onDrop, onDragOver: this.props.onDragOver },\n            React.createElement(\"div\", { className: className },\n                this.renderScreenContent(),\n                Buttons && this.renderButtons(Buttons)),\n            needMinimap && this.renderMinimap(mapWidth, mapHeight, mapPosition)));\n    };\n    ReScreen.defaultProps = {\n        type: 'SVG',\n        width: '100%',\n        height: '100%',\n        needMinimap: true,\n        zoomEnabled: true,\n        minZoom: 0.01,\n        maxZoom: 100,\n        dragDirection: 'ALL',\n        mapPosition: 'RT',\n        mapWidth: 100,\n        mapHeight: 100,\n        mapPadding: 20,\n        autoHideMiniMap: false,\n        miniMapZoomEnabled: false,\n        draggable: true\n    };\n    return ReScreen;\n}(React.Component));\nexports.default = ReScreen;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}