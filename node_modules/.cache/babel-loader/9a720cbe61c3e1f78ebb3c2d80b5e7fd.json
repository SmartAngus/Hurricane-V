{"ast":null,"code":"var _jsxFileName = \"/Users/majy/work/bici/code/editor-demo/src/features/editor/common/EditorNode.tsx\";\n\n/**\n * @file 业务组件，基于Node的组件卡片\n * @author perkinJ\n */\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Menu } from \"antd\";\nimport { Node as NodeContainer } from \"../components\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { OperateType } from \"../constants/defines\";\nimport { useClickAway } from \"../hooks/useClickAway\";\nimport \"./EditorNode.scss\";\nconst {\n  useState,\n  useRef,\n  useMemo,\n  useCallback\n} = React;\n\nclass EditorNodeProps {\n  constructor() {\n    this.id = void 0;\n    this.currentNode = void 0;\n    this.onSelect = void 0;\n    this.onContextMenu = void 0;\n    this.isCompleted = void 0;\n    this.hasError = void 0;\n    this.isSelected = void 0;\n    this.isDragged = void 0;\n    this.onClick = void 0;\n    this.interactive = void 0;\n    this.currTrans = void 0;\n    this.showSelector = void 0;\n    this.nodeRef = void 0;\n    this.onResize = void 0;\n  }\n\n}\n/**\n * 获取元素相对于页面的绝对位置\n */\n\n\nexport function getOffset(domNode) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\nexport function EditorNode(props) {\n  const {\n    currentNode,\n    onSelect,\n    isSelected,\n    isDragged,\n    onClick,\n    interactive = true,\n    currTrans,\n    nodeRef,\n    onResize,\n    showSelector,\n    id\n  } = props; // 组件内状态，与业务无关\n\n  const [menuShow, setMenuShow] = useState(false);\n  const [menuPos, setMenuPos] = useState({\n    left: 0,\n    top: 0\n  });\n  useClickAway(() => {\n    setMenuShow(false);\n  }, () => document.querySelector(\".editorNode-box-menu\"), \"contextmenu\");\n  const menuRef = useClickAway(() => {\n    setMenuShow(false);\n  });\n  const editorNodeRef = useRef(null); // const [pos, setPos] = useState(initPos);\n  // 边框颜色\n\n  let borderColor = \"\";\n\n  if (isSelected) {\n    borderColor = `selected ${currentNode.key}-clicked ${currentNode.key}-border`;\n  } else {\n    borderColor = `${currentNode.key}-border`;\n  } // 是否是圆形\n\n\n  const isCircle = currentNode.key === \"circle\"; // 是否为圆角\n\n  const isRadius = currentNode.key === 'rectRadius'; // 是否为菱形\n\n  const isDiamond = currentNode.key === 'diamond';\n  const borderClass = classNames(\"editorNode-box\", borderColor, {\n    dragging: isDragged\n  }, {\n    \"editorNode-circle\": isCircle\n  }, {\n    \"editorNode-rectRadius\": isRadius\n  });\n  const menuList = [{\n    name: \"删除\",\n    key: OperateType.delete,\n    disabled: false\n  }];\n\n  const onContextMenu = (position, event) => {\n    event.stopPropagation();\n    event.preventDefault(); // 根据业务场景处理菜单的位置\n\n    const newPosition = {\n      left: position.left,\n      top: position.top\n    };\n    setMenuPos(newPosition);\n    setMenuShow(true);\n\n    if (props.onContextMenu) {\n      props.onContextMenu(event);\n    }\n  };\n  /** 点击菜单项 */\n\n\n  const handleClickMenu = ({\n    key\n  }) => {\n    onSelect(currentNode, key);\n    setMenuShow(false);\n  };\n  /** 点击组件 */\n\n\n  const handleClickNode = useCallback(event => {\n    if (interactive && onClick) {\n      onClick(currentNode, event);\n    }\n  }, [interactive, onClick, currentNode]);\n  console.log(\"currentNode==\", currentNode);\n  return /*#__PURE__*/React.createElement(NodeContainer, {\n    id: currentNode.id,\n    x: currentNode.x,\n    y: currentNode.y,\n    width: currentNode.width,\n    height: currentNode.height,\n    chart: currentNode.chart,\n    currTrans: currTrans,\n    ref: nodeRef,\n    isSelected: isSelected,\n    onClick: handleClickNode,\n    onResize: onResize,\n    onContextMenu: interactive ? onContextMenu : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, () => {\n    if (currentNode.chart) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode\",\n        ref: editorNodeRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: borderClass,\n        style: {\n          transform: isDiamond ? `rotateZ(45deg) skew(30deg,30deg)` : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-box-property\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, currentNode.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-box-menu\",\n        ref: menuRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenu, {\n        id: currentNode.id,\n        visible: menuShow,\n        left: menuPos.left,\n        top: menuPos.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        getPopupContainer: triggerNode => triggerNode.parentNode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, menuList.map(child => {\n        return /*#__PURE__*/React.createElement(Menu.Item, {\n          key: child.key,\n          onClick: handleClickMenu,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 31\n          }\n        }, child.name);\n      }))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode\",\n        ref: editorNodeRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: borderClass,\n        style: {\n          transform: isDiamond ? `rotateZ(45deg) skew(30deg,30deg)` : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-box-property\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, currentNode.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editorNode-box-menu\",\n        ref: menuRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenu, {\n        id: currentNode.id,\n        visible: menuShow,\n        left: menuPos.left,\n        top: menuPos.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        getPopupContainer: triggerNode => triggerNode.parentNode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      }, menuList.map(child => {\n        return /*#__PURE__*/React.createElement(Menu.Item, {\n          key: child.key,\n          onClick: handleClickMenu,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 31\n          }\n        }, child.name);\n      }))))));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/common/EditorNode.tsx"],"names":["React","classNames","Menu","Node","NodeContainer","ContextMenu","OperateType","useClickAway","useState","useRef","useMemo","useCallback","EditorNodeProps","id","currentNode","onSelect","onContextMenu","isCompleted","hasError","isSelected","isDragged","onClick","interactive","currTrans","showSelector","nodeRef","onResize","getOffset","domNode","offsetTop","offsetLeft","targetDomNode","window","document","body","offsetParent","EditorNode","props","menuShow","setMenuShow","menuPos","setMenuPos","left","top","querySelector","menuRef","editorNodeRef","borderColor","key","isCircle","isRadius","isDiamond","borderClass","dragging","menuList","name","delete","disabled","position","event","stopPropagation","preventDefault","newPosition","handleClickMenu","handleClickNode","console","log","x","y","width","height","chart","transform","triggerNode","parentNode","map","child"],"mappings":"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","sourcesContent":["/**\n * @file 业务组件，基于Node的组件卡片\n * @author perkinJ\n */\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Menu } from \"antd\";\nimport { Node as NodeContainer } from \"../components\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { Node, OperateType } from \"../constants/defines\";\nimport { useClickAway } from \"../hooks/useClickAway\";\nimport \"./EditorNode.scss\";\nimport CapsuleChart from \"../components/charts/capsuleChart\";\n\nconst { useState, useRef, useMemo, useCallback } = React;\n\nclass EditorNodeProps {\n  /** 唯一id，用于Contextmenu展示 */\n  id?: string;\n\n  /** 节点信息 */\n  currentNode: Node;\n\n  /** 选择菜单栏 */\n  onSelect?: (currentNode: Node, key: any) => void;\n\n  /** 右键组件 */\n  onContextMenu?: (event: React.MouseEvent<HTMLLIElement>) => void;\n\n  /** 是否属性设置完全 */\n  isCompleted?: boolean;\n\n  /** 是否有错误数据 */\n  hasError?: boolean;\n\n  /** 是否被点击 */\n  isSelected?: boolean;\n\n  /** 是否被拖拽 */\n  isDragged?: boolean;\n\n  /** 点击卡片 */\n  onClick?: (currentNode: Node, event: any) => void;\n\n  /** 是否可交互，区分展示型和交互型 */\n  interactive?: boolean;\n\n  /** 外部容器的缩放情况 */\n  currTrans?: any;\n\n  /** 显示选择器 */\n  showSelector?: boolean;\n\n  /** Node容器的ref */\n  nodeRef: any;\n\n  /** 改变节点大小 */\n  onResize?: (width: number, height: number, x: number, y: number) => void;\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nexport function getOffset(domNode: any) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n  while (targetDomNode !== window.document.body && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\nexport function EditorNode(props: EditorNodeProps) {\n  const {\n    currentNode,\n    onSelect,\n    isSelected,\n    isDragged,\n    onClick,\n    interactive = true,\n    currTrans,\n    nodeRef,\n    onResize,\n    showSelector,\n    id\n  } = props;\n  // 组件内状态，与业务无关\n  const [menuShow, setMenuShow] = useState(false);\n  const [menuPos, setMenuPos] = useState({ left: 0, top: 0 });\n\n  useClickAway(\n    () => {\n      setMenuShow(false);\n    },\n    () => document.querySelector(\".editorNode-box-menu\"),\n    \"contextmenu\"\n  );\n\n  const menuRef = useClickAway(() => {\n    setMenuShow(false);\n  });\n\n  const editorNodeRef = useRef(null);\n\n  // const [pos, setPos] = useState(initPos);\n  // 边框颜色\n  let borderColor = \"\";\n  if (isSelected) {\n    borderColor = `selected ${currentNode.key}-clicked ${\n      currentNode.key\n    }-border`;\n  } else {\n    borderColor = `${currentNode.key}-border`;\n  }\n\n  // 是否是圆形\n  const isCircle = currentNode.key === \"circle\";\n\n  // 是否为圆角\n  const isRadius = currentNode.key === 'rectRadius';\n\n  // 是否为菱形\n  const isDiamond = currentNode.key === 'diamond';\n\n  const borderClass = classNames(\n    \"editorNode-box\",\n    borderColor,\n    {\n      dragging: isDragged\n    },\n    { \"editorNode-circle\": isCircle },\n    { \"editorNode-rectRadius\": isRadius},\n  );\n\n  const menuList = [\n    {\n      name: \"删除\",\n      key: OperateType.delete,\n      disabled: false\n    }\n  ];\n\n  const onContextMenu = (\n    position: { left: number; top: number },\n    event: React.MouseEvent<any>\n  ) => {\n    event.stopPropagation();\n    event.preventDefault();\n    // 根据业务场景处理菜单的位置\n    const newPosition = {\n      left: position.left,\n      top: position.top\n    };\n    setMenuPos(newPosition);\n    setMenuShow(true);\n    if (props.onContextMenu) {\n      props.onContextMenu(event);\n    }\n  };\n\n  /** 点击菜单项 */\n  const handleClickMenu = ({ key }) => {\n    onSelect(currentNode, key);\n    setMenuShow(false);\n  };\n\n  /** 点击组件 */\n  const handleClickNode = useCallback(\n    event => {\n      if (interactive && onClick) {\n        onClick(currentNode, event);\n      }\n    },\n    [interactive, onClick, currentNode]\n  );\n  console.log(\"currentNode==\",currentNode)\n  return (\n    <NodeContainer\n      id={currentNode.id}\n      x={currentNode.x}\n      y={currentNode.y}\n      width={currentNode.width}\n      height={currentNode.height}\n      chart={currentNode.chart}\n      currTrans={currTrans}\n      ref={nodeRef}\n      isSelected={isSelected}\n      onClick={handleClickNode}\n      onResize={onResize}\n      onContextMenu={interactive ? onContextMenu : null}\n    >\n      {()=>{\n        if(currentNode.chart){\n          return (\n              <div className=\"editorNode\" ref={editorNodeRef}>\n                <div className={borderClass} style={ { transform: isDiamond?`rotateZ(45deg) skew(30deg,30deg)`: 'none'}}>\n                  <div className=\"editorNode-box-property\">\n                    <div className=\"editorNode-name\">\n                      {currentNode.name}\n                    </div>\n                  </div>\n                  <div className=\"editorNode-box-menu\" ref={menuRef}>\n                    <ContextMenu\n                        id={currentNode.id}\n                        visible={menuShow}\n                        left={menuPos.left}\n                        top={menuPos.top}\n                    >\n                      <Menu\n                          getPopupContainer={(triggerNode: any) => triggerNode.parentNode}\n                      >\n                        {menuList.map(child => {\n                          return (\n                              <Menu.Item key={child.key} onClick={handleClickMenu}>\n                                {child.name}\n                              </Menu.Item>\n                          );\n                        })}\n                      </Menu>\n                    </ContextMenu>\n                  </div>\n                </div>\n              </div>\n          )\n        }else{\n          return (\n              <div className=\"editorNode\" ref={editorNodeRef}>\n                <div className={borderClass} style={ { transform: isDiamond?`rotateZ(45deg) skew(30deg,30deg)`: 'none'}}>\n                  <div className=\"editorNode-box-property\">\n                    <div className=\"editorNode-name\">\n                      {currentNode.name}\n                    </div>\n                  </div>\n                  <div className=\"editorNode-box-menu\" ref={menuRef}>\n                    <ContextMenu\n                        id={currentNode.id}\n                        visible={menuShow}\n                        left={menuPos.left}\n                        top={menuPos.top}\n                    >\n                      <Menu\n                          getPopupContainer={(triggerNode: any) => triggerNode.parentNode}\n                      >\n                        {menuList.map(child => {\n                          return (\n                              <Menu.Item key={child.key} onClick={handleClickMenu}>\n                                {child.name}\n                              </Menu.Item>\n                          );\n                        })}\n                      </Menu>\n                    </ContextMenu>\n                  </div>\n                </div>\n              </div>\n          )\n        }\n      }}\n\n    </NodeContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}