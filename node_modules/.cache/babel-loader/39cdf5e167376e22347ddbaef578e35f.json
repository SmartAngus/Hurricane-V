{"ast":null,"code":"/**\n * @file 布局相关方法\n * @author perkinJ\n */\nexport class Point {\n  constructor() {\n    this.x = void 0;\n    this.y = void 0;\n  }\n\n}\n\n/**\n * @description 射线法判断点是否在多边形内部\n * @param {Object} p 待判断的点，格式：{ x: X坐标, y: Y坐标 }\n * @param {Array} poly 多边形顶点，数组成员的格式同 p\n * @return {Relation} 点p在多边形的关系，分别为on,in,out\n */\nexport function pointInPoly(p, poly) {\n  const px = p.x;\n  const py = p.y;\n  let flag = false;\n\n  for (let i = 0, l = poly.length, j = l - 1; i < l; j = i, i++) {\n    const sx = poly[i].x;\n    const sy = poly[i].y;\n    const tx = poly[j].x;\n    const ty = poly[j].y; // 点与多边形顶点重合\n\n    if (sx === px && sy === py || tx === px && ty === py) {\n      return \"on\";\n    } // 判断线段两端点是否在射线两侧\n\n\n    if (sy < py && ty >= py || sy >= py && ty < py) {\n      // 线段上与射线 Y 坐标相同的点的 X 坐标\n      const x = sx + (py - sy) * (tx - sx) / (ty - sy); // 点在多边形的边上\n\n      if (x === px) {\n        return \"on\";\n      } // 射线穿过多边形的边界\n\n\n      if (x > px) {\n        flag = !flag;\n      }\n    }\n  } // 射线穿过多边形边界的次数为奇数时点在多边形内\n\n\n  return flag ? \"in\" : \"out\";\n}\n\n/**\n * @description 判断节点是否离开某个组\n * @param {Node} node 待判断的节点\n * @param {Group} group 组\n * @paran {Direction} 区分是节点拖入还是节点拖出的动作。默认是拖入\n * 拖入情况下，只要有一个节点进入，则算在组内，否则在组外\n * 拖出情况下，只有当节点的点全部在组外，才算在组外。\n * @return Direction\n */\nexport function checkNodeIsOverGroup(node, group, type = \"leave\") {\n  const {\n    x: groupX,\n    y: groupY,\n    width,\n    height\n  } = group;\n  const P1 = {\n    x: node === null || node === void 0 ? void 0 : node.x,\n    y: node === null || node === void 0 ? void 0 : node.y\n  };\n  const P2 = {\n    x: (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width),\n    y: node === null || node === void 0 ? void 0 : node.y\n  };\n  const P3 = {\n    x: (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width),\n    y: (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height)\n  };\n  const P4 = {\n    x: node === null || node === void 0 ? void 0 : node.x,\n    y: (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height)\n  };\n  const polyPoint = [{\n    x: groupX,\n    y: groupY\n  }, {\n    x: groupX + width,\n    y: groupY\n  }, {\n    x: groupX + width,\n    y: groupY + height\n  }, {\n    x: groupX,\n    y: groupY + height\n  }];\n\n  if (type === \"enter\") {\n    const isEnter = pointInPoly(P1, polyPoint) === \"in\" || pointInPoly(P2, polyPoint) === \"in\" || pointInPoly(P3, polyPoint) === \"in\" || pointInPoly(P4, polyPoint) === \"in\";\n    return isEnter ? \"in\" : \"out\";\n  } else {\n    const isLeave = pointInPoly(P1, polyPoint) === \"out\" || pointInPoly(P2, polyPoint) === \"out\" || pointInPoly(P3, polyPoint) === \"out\" || pointInPoly(P4, polyPoint) === \"out\";\n    return isLeave ? \"out\" : \"in\";\n  }\n}","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/utils/layout.ts"],"names":["Point","x","y","pointInPoly","p","poly","px","py","flag","i","l","length","j","sx","sy","tx","ty","checkNodeIsOverGroup","node","group","type","groupX","groupY","width","height","P1","P2","P3","P4","polyPoint","isEnter","isLeave"],"mappings":"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","sourcesContent":["/**\n * @file 布局相关方法\n * @author perkinJ\n */\nimport { Node, Group } from \"../defines\";\n\nexport class Point {\n  x: number;\n\n  y: number;\n}\n\nexport type Relation = \"on\" | \"in\" | \"out\";\n\n/**\n * @description 射线法判断点是否在多边形内部\n * @param {Object} p 待判断的点，格式：{ x: X坐标, y: Y坐标 }\n * @param {Array} poly 多边形顶点，数组成员的格式同 p\n * @return {Relation} 点p在多边形的关系，分别为on,in,out\n */\n\nexport function pointInPoly(p: Point, poly: Point[]): Relation {\n  const px = p.x;\n  const py = p.y;\n  let flag = false;\n\n  for (let i = 0, l = poly.length, j = l - 1; i < l; j = i, i++) {\n    const sx = poly[i].x;\n    const sy = poly[i].y;\n    const tx = poly[j].x;\n    const ty = poly[j].y;\n\n    // 点与多边形顶点重合\n    if ((sx === px && sy === py) || (tx === px && ty === py)) {\n      return \"on\";\n    }\n\n    // 判断线段两端点是否在射线两侧\n    if ((sy < py && ty >= py) || (sy >= py && ty < py)) {\n      // 线段上与射线 Y 坐标相同的点的 X 坐标\n      const x = sx + ((py - sy) * (tx - sx)) / (ty - sy);\n\n      // 点在多边形的边上\n      if (x === px) {\n        return \"on\";\n      }\n\n      // 射线穿过多边形的边界\n      if (x > px) {\n        flag = !flag;\n      }\n    }\n  }\n\n  // 射线穿过多边形边界的次数为奇数时点在多边形内\n  return flag ? \"in\" : \"out\";\n}\n\nexport type Direction = \"in\" | \"out\";\n/**\n * @description 判断节点是否离开某个组\n * @param {Node} node 待判断的节点\n * @param {Group} group 组\n * @paran {Direction} 区分是节点拖入还是节点拖出的动作。默认是拖入\n * 拖入情况下，只要有一个节点进入，则算在组内，否则在组外\n * 拖出情况下，只有当节点的点全部在组外，才算在组外。\n * @return Direction\n */\n\nexport function checkNodeIsOverGroup(\n  node: Node,\n  group: Group,\n  type = \"leave\" as \"enter\" | \"leave\"\n): Direction {\n  const { x: groupX, y: groupY, width, height } = group;\n\n  const P1 = { x: node?.x, y: node?.y };\n  const P2 = { x: node?.x + node?.width, y: node?.y };\n  const P3 = {\n    x: node?.x + node?.width,\n    y: node?.y + node?.height\n  };\n  const P4 = { x: node?.x, y: node?.y + node?.height };\n\n  const polyPoint = [\n    { x: groupX, y: groupY },\n    { x: groupX + width, y: groupY },\n    { x: groupX + width, y: groupY + height },\n    { x: groupX, y: groupY + height }\n  ];\n\n  if (type === \"enter\") {\n    const isEnter =\n      pointInPoly(P1, polyPoint) === \"in\" ||\n      pointInPoly(P2, polyPoint) === \"in\" ||\n      pointInPoly(P3, polyPoint) === \"in\" ||\n      pointInPoly(P4, polyPoint) === \"in\";\n    return isEnter ? \"in\" : \"out\";\n  } else {\n    const isLeave =\n      pointInPoly(P1, polyPoint) === \"out\" ||\n      pointInPoly(P2, polyPoint) === \"out\" ||\n      pointInPoly(P3, polyPoint) === \"out\" ||\n      pointInPoly(P4, polyPoint) === \"out\";\n\n    return isLeave ? \"out\" : \"in\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}