{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar define_1 = require(\"./define\");\n\nexports.Matrix = define_1.Matrix;\nexports.LinkInfo = define_1.LinkInfo;\n\nvar graph_1 = require(\"../../Utils/graph\");\n\nvar _ = require(\"lodash\");\n\nfunction calcRadius(maxRadius, maxSize, minSize) {\n  if (maxSize === minSize) {\n    return function () {\n      return maxRadius;\n    };\n  }\n\n  var minRadius = maxRadius * 0.7;\n  var k = (maxSize - minSize) / (maxRadius - minRadius);\n  var b = minSize - minRadius * k;\n  return function (size) {\n    return (size - b) / k;\n  };\n}\n\n;\n\nfunction randomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n\n;\n\nvar defaultProps = function () {\n  function defaultProps() {}\n\n  return defaultProps;\n}();\n\nvar Bubble = function () {\n  function Bubble(_a) {\n    var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        rowCount = _a.rowCount,\n        minSize = _a.minSize,\n        maxSize = _a.maxSize;\n    this.matrix = [];\n    this.matrixRows = [];\n    this.matrixColumns = [];\n    this.edges = [];\n    this.init(data, width, height, rowCount, maxSize, minSize);\n  }\n\n  Bubble.prototype.init = function (data, width, height, rowCount, maxSize, minSize) {\n    this.data = data;\n    this.rowCount = rowCount;\n    this.maxSize = maxSize;\n    this.minSize = minSize;\n    this.columnCount = Math.ceil((data || []).length / rowCount);\n    this.heightInterval = height / rowCount;\n    this.widthInterval = width / this.columnCount;\n\n    for (var i = 0; i < rowCount; i++) {\n      this.matrixRows.push({\n        l: i * this.heightInterval,\n        r: (i + 1) * this.heightInterval\n      });\n    }\n\n    for (var i = 0; i < this.columnCount; i++) {\n      this.matrixColumns.push({\n        l: i * this.widthInterval,\n        r: (i + 1) * this.widthInterval\n      });\n    }\n  };\n\n  Bubble.prototype.getNodes = function () {\n    var radiusF = calcRadius(_.min([this.heightInterval / 2, this.widthInterval / 2]) * 0.9, this.maxSize, this.minSize);\n    var nodes = (this.data || []).map(function (node) {\n      var radius = radiusF(node.value);\n      return {\n        id: String(node.id),\n        name: node.name,\n        value: node.value,\n        radius: radius\n      };\n    });\n    var allCount = this.rowCount * this.columnCount;\n    var countList = Object.keys(Array.from({\n      length: allCount\n    })).map(function (item) {\n      return +item;\n    }).sort(function (a, b) {\n      return Math.random() > 0.5 ? -1 : 1;\n    });\n    var matrix = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var rowIndex = Math.floor(countList[i] / this.columnCount);\n      var columnIndex = countList[i] % this.columnCount;\n      var radius = nodes[i].radius;\n      var randomX = randomNumber(this.matrixColumns[columnIndex].l + radius, this.matrixColumns[columnIndex].r - radius);\n      var randomY = randomNumber(this.matrixRows[rowIndex].l + radius, this.matrixRows[rowIndex].r - radius);\n      matrix.push({\n        node: nodes[i],\n        rowIndex: rowIndex,\n        columnIndex: columnIndex,\n        widthRange: this.matrixColumns[columnIndex],\n        heightRange: this.matrixRows[rowIndex],\n        center: {\n          x: randomX,\n          y: randomY\n        },\n        radius: radius\n      });\n    }\n\n    this.matrix = matrix;\n    return matrix;\n  };\n\n  Bubble.prototype.getLinks = function () {\n    var _this = this;\n\n    var dupliEdges = _.flatten((this.data || []).map(function (edge) {\n      return (edge.siblings || []).map(function (end) {\n        return {\n          u: String(edge.id),\n          v: String(end.id),\n          bothway: false\n        };\n      });\n    }));\n\n    dupliEdges.forEach(function (item) {\n      var edge = _.find(_this.edges, function (o) {\n        return o.u === item.v && o.v === item.u;\n      });\n\n      if (!edge) {\n        _this.edges.push(item);\n      } else {\n        edge.bothway = true;\n      }\n    });\n    var link = [];\n    this.edges.forEach(function (edge) {\n      var u = edge.u,\n          v = edge.v,\n          bothway = edge.bothway;\n\n      var startNode = _.find(_this.matrix, function (item) {\n        return String(item.node.id) === String(u);\n      });\n\n      var initStartPoint = startNode.center;\n\n      var endNode = _.find(_this.matrix, function (item) {\n        return String(item.node.id) === String(v);\n      });\n\n      var initEndPoint = endNode.center;\n      var initControlPoint = graph_1.getControlPoint(initStartPoint, initEndPoint, 0.2, 1);\n      var startDis = graph_1.distance(initStartPoint, initControlPoint);\n      var startPoint = {\n        x: initStartPoint.x + (initControlPoint.x - initStartPoint.x) * (startNode.radius / startDis),\n        y: initStartPoint.y + (initControlPoint.y - initStartPoint.y) * (startNode.radius / startDis)\n      };\n      var endDis = graph_1.distance(initControlPoint, initEndPoint);\n      var endPoint = {\n        x: initEndPoint.x + (initControlPoint.x - initEndPoint.x) * (endNode.radius / endDis),\n        y: initEndPoint.y + (initControlPoint.y - initEndPoint.y) * (endNode.radius / endDis)\n      };\n      var linkInfo = {\n        start: startPoint,\n        end: endPoint,\n        control: graph_1.getControlPoint(startPoint, endPoint, 0.15, 1),\n        u: u,\n        v: v,\n        bothway: bothway\n      };\n      link.push(linkInfo);\n    });\n    return link;\n  };\n\n  Bubble.prototype.graph = function () {\n    var nodes = this.getNodes();\n    var links = this.getLinks();\n    return {\n      nodes: nodes,\n      links: links\n    };\n  };\n\n  return Bubble;\n}();\n\nexports.Bubble = Bubble;","map":{"version":3,"sources":["../../../src/BaseLayout/Bubble/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar define_1 = require(\"./define\");\nexports.Matrix = define_1.Matrix;\nexports.LinkInfo = define_1.LinkInfo;\nvar graph_1 = require(\"../../Utils/graph\");\nvar _ = require(\"lodash\");\nfunction calcRadius(maxRadius, maxSize, minSize) {\n    if (maxSize === minSize) {\n        return function () {\n            return maxRadius;\n        };\n    }\n    var minRadius = maxRadius * 0.7;\n    var k = (maxSize - minSize) / (maxRadius - minRadius);\n    var b = minSize - minRadius * k;\n    return function (size) {\n        return (size - b) / k;\n    };\n}\n;\nfunction randomNumber(start, end) {\n    return Math.random() * (end - start) + start;\n}\n;\nvar defaultProps = (function () {\n    function defaultProps() {\n    }\n    return defaultProps;\n}());\nvar Bubble = (function () {\n    function Bubble(_a) {\n        var data = _a.data, width = _a.width, height = _a.height, rowCount = _a.rowCount, minSize = _a.minSize, maxSize = _a.maxSize;\n        this.matrix = [];\n        this.matrixRows = [];\n        this.matrixColumns = [];\n        this.edges = [];\n        this.init(data, width, height, rowCount, maxSize, minSize);\n    }\n    Bubble.prototype.init = function (data, width, height, rowCount, maxSize, minSize) {\n        this.data = data;\n        this.rowCount = rowCount;\n        this.maxSize = maxSize;\n        this.minSize = minSize;\n        this.columnCount = Math.ceil((data || []).length / rowCount);\n        this.heightInterval = height / rowCount;\n        this.widthInterval = width / this.columnCount;\n        for (var i = 0; i < rowCount; i++) {\n            this.matrixRows.push({ l: i * this.heightInterval, r: (i + 1) * this.heightInterval });\n        }\n        for (var i = 0; i < this.columnCount; i++) {\n            this.matrixColumns.push({ l: i * this.widthInterval, r: (i + 1) * this.widthInterval });\n        }\n    };\n    Bubble.prototype.getNodes = function () {\n        var radiusF = calcRadius(_.min([this.heightInterval / 2, this.widthInterval / 2]) * 0.9, this.maxSize, this.minSize);\n        var nodes = (this.data || []).map(function (node) {\n            var radius = radiusF(node.value);\n            return {\n                id: String(node.id),\n                name: node.name,\n                value: node.value,\n                radius: radius\n            };\n        });\n        var allCount = this.rowCount * this.columnCount;\n        var countList = Object.keys(Array.from({ length: allCount }))\n            .map(function (item) {\n            return +item;\n        })\n            .sort(function (a, b) {\n            return Math.random() > 0.5 ? -1 : 1;\n        });\n        var matrix = [];\n        for (var i = 0; i < nodes.length; i++) {\n            var rowIndex = Math.floor(countList[i] / this.columnCount);\n            var columnIndex = countList[i] % this.columnCount;\n            var radius = nodes[i].radius;\n            var randomX = randomNumber(this.matrixColumns[columnIndex].l + radius, this.matrixColumns[columnIndex].r - radius);\n            var randomY = randomNumber(this.matrixRows[rowIndex].l + radius, this.matrixRows[rowIndex].r - radius);\n            matrix.push({\n                node: nodes[i],\n                rowIndex: rowIndex,\n                columnIndex: columnIndex,\n                widthRange: this.matrixColumns[columnIndex],\n                heightRange: this.matrixRows[rowIndex],\n                center: {\n                    x: randomX,\n                    y: randomY\n                },\n                radius: radius\n            });\n        }\n        this.matrix = matrix;\n        return matrix;\n    };\n    Bubble.prototype.getLinks = function () {\n        var _this = this;\n        var dupliEdges = _.flatten((this.data || []).map(function (edge) {\n            return (edge.siblings || []).map(function (end) { return ({\n                u: String(edge.id),\n                v: String(end.id),\n                bothway: false\n            }); });\n        }));\n        dupliEdges.forEach(function (item) {\n            var edge = _.find(_this.edges, function (o) { return o.u === item.v && o.v === item.u; });\n            if (!edge) {\n                _this.edges.push(item);\n            }\n            else {\n                edge.bothway = true;\n            }\n        });\n        var link = [];\n        this.edges.forEach(function (edge) {\n            var u = edge.u, v = edge.v, bothway = edge.bothway;\n            var startNode = _.find(_this.matrix, function (item) {\n                return String(item.node.id) === String(u);\n            });\n            var initStartPoint = startNode.center;\n            var endNode = _.find(_this.matrix, function (item) {\n                return String(item.node.id) === String(v);\n            });\n            var initEndPoint = endNode.center;\n            var initControlPoint = graph_1.getControlPoint(initStartPoint, initEndPoint, 0.2, 1);\n            var startDis = graph_1.distance(initStartPoint, initControlPoint);\n            var startPoint = {\n                x: initStartPoint.x + (initControlPoint.x - initStartPoint.x) * (startNode.radius / startDis),\n                y: initStartPoint.y + (initControlPoint.y - initStartPoint.y) * (startNode.radius / startDis)\n            };\n            var endDis = graph_1.distance(initControlPoint, initEndPoint);\n            var endPoint = {\n                x: initEndPoint.x + (initControlPoint.x - initEndPoint.x) * (endNode.radius / endDis),\n                y: initEndPoint.y + (initControlPoint.y - initEndPoint.y) * (endNode.radius / endDis)\n            };\n            var linkInfo = {\n                start: startPoint,\n                end: endPoint,\n                control: graph_1.getControlPoint(startPoint, endPoint, 0.15, 1),\n                u: u,\n                v: v,\n                bothway: bothway\n            };\n            link.push(linkInfo);\n        });\n        return link;\n    };\n    Bubble.prototype.graph = function () {\n        var nodes = this.getNodes();\n        var links = this.getLinks();\n        return {\n            nodes: nodes,\n            links: links\n        };\n    };\n    return Bubble;\n}());\nexports.Bubble = Bubble;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}