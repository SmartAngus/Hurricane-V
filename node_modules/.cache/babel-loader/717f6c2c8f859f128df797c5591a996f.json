{"ast":null,"code":"/**\n * @file 画布底层位置计算相关方法\n * @author 剑决(perkin.pj)\n */\n\n/**\n * 两点间直线距离\n * @param sourcePoint\n * @param targetPoint\n */\nexport function distance(sourcePoint, targetPoint) {\n  const x = sourcePoint.x - targetPoint.x;\n  const y = sourcePoint.y - targetPoint.y;\n  return Math.sqrt(x * x + y * y);\n}\n/**\n * 两点间曲线\n * @param sourcePoint\n * @param targetPoint\n */\n\nexport const quadratic = (sourcePoint, targetPoint) => {\n  const sourceX = sourcePoint.x;\n  const targetX = targetPoint.x;\n  const centerX = (sourceX + targetX) / 2;\n  const centerY = (sourcePoint.y + targetPoint.y) / 2;\n  let tolerance = 30;\n  const sub = targetPoint.y - sourcePoint.y;\n\n  if (sub > -100 && sub < 100) {\n    tolerance = Math.max(Math.abs(targetPoint.y - sourcePoint.y) / 2, 20);\n  }\n\n  return [\"M\", sourceX, sourcePoint.y, \"Q\",\n  /** 横向与竖向有区别 */\n  sourceX + tolerance, sourcePoint.y, centerX, centerY, \"T\", targetX - 6, targetPoint.y - 2].join(\" \");\n};\n/**\n * 计算屏幕缩放比例\n */\n\nexport function detectZoom() {\n  let ratio = window.outerWidth / window.innerWidth;\n  const screen = window.screen;\n  const ua = navigator.userAgent.toLowerCase();\n\n  if (window.devicePixelRatio !== undefined) {\n    // 由于mac retina屏幕devicePixelRatio会扩大2倍，这里mac统一用window.outerWidth / window.innerWidth表示ratio\n    const isMac = /macintosh|mac os x/i.test(ua);\n    ratio = isMac ? window.outerWidth / window.innerWidth : window.devicePixelRatio;\n  } else if (ua.indexOf(\"msie\") > -1) {\n    if (screen.deviceXDPI && screen.logicalXDPI) {\n      ratio = screen.deviceXDPI / screen.logicalXDPI;\n    }\n  } else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\n    ratio = window.outerWidth / window.innerWidth;\n  }\n\n  if (ratio) {\n    ratio = Math.round(ratio * 100) / 100;\n  }\n\n  return ratio;\n}\n/**\n * 获取元素相对于页面的绝对位置\n */\n\nexport function getOffset(domNode, parentElem = window.document.body) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n\n  while (targetDomNode !== parentElem && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n/** 获取元素在页面上占据的高度 */\n\nexport function getHeight(dom) {\n  if (!dom) {\n    return 0;\n  }\n\n  const style = window.getComputedStyle(dom);\n  return dom.getBoundingClientRect().height + Number(style.marginTop.match(/\\d+/g)) + Number(style.marginBottom.match(/\\d+/g));\n} // 获取元素在页面上占据的宽度\n\nexport function getWidth(dom) {\n  if (!dom) {\n    return 0;\n  }\n\n  const style = window.getComputedStyle(dom);\n  return dom.getBoundingClientRect().width + Number(style.marginLeft.match(/\\d+/g)) + Number(style.marginRight.match(/\\d+/g));\n}\n/** 获取元素在页面的绝对位置 */\n\nexport function getPosition(dom) {\n  if (!dom) {\n    return 0;\n  }\n\n  return {\n    x: dom.getBoundingClientRect().x,\n    y: dom.getBoundingClientRect().y\n  };\n}\nexport function calcLinkPosition(node, position) {\n  let x = (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width);\n  let y = (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height) / 2;\n\n  if (position === \"left\") {\n    x = node === null || node === void 0 ? void 0 : node.x;\n    y = (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height) / 2;\n  } else if (position === \"right\") {\n    x = (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width);\n    y = (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height) / 2;\n  } else if (position === \"top\") {\n    x = (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width) / 2;\n    y = node === null || node === void 0 ? void 0 : node.y;\n  } else if (position === \"bottom\") {\n    x = (node === null || node === void 0 ? void 0 : node.x) + (node === null || node === void 0 ? void 0 : node.width) / 2;\n    y = (node === null || node === void 0 ? void 0 : node.y) + (node === null || node === void 0 ? void 0 : node.height);\n  }\n\n  return {\n    x,\n    y\n  };\n} // 处理不同图形的path数据\n\nexport function handlePathData(shape, shapeProps) {\n  const {\n    x,\n    y,\n    width,\n    height,\n    direction\n  } = shapeProps;\n  let pathData = \"\";\n\n  if (shape === \"rect\") {\n    pathData = `M${x} ${y} h ${width} v ${height} h -${width} Z`;\n\n    if (direction === \"right\") {\n      pathData = `M${x} ${y} h -${width} v -${height} h ${width} Z`;\n    }\n  }\n\n  return pathData;\n}","map":{"version":3,"sources":["/Users/majy/work/bici/code/editor-demo/src/features/editor/utils/calc.ts"],"names":["distance","sourcePoint","targetPoint","x","y","Math","sqrt","quadratic","sourceX","targetX","centerX","centerY","tolerance","sub","max","abs","join","detectZoom","ratio","window","outerWidth","innerWidth","screen","ua","navigator","userAgent","toLowerCase","devicePixelRatio","undefined","isMac","test","indexOf","deviceXDPI","logicalXDPI","round","getOffset","domNode","parentElem","document","body","offsetTop","offsetLeft","targetDomNode","offsetParent","getHeight","dom","style","getComputedStyle","getBoundingClientRect","height","Number","marginTop","match","marginBottom","getWidth","width","marginLeft","marginRight","getPosition","calcLinkPosition","node","position","handlePathData","shape","shapeProps","direction","pathData"],"mappings":"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","sourcesContent":["/**\n * @file 画布底层位置计算相关方法\n * @author 剑决(perkin.pj)\n */\n\nimport * as _ from \"lodash\";\nimport { Point, Shape, ShapeProps } from \"./types\";\nimport { Node, Group } from \"../defines\";\n/**\n * 两点间直线距离\n * @param sourcePoint\n * @param targetPoint\n */\nexport function distance(sourcePoint: Point, targetPoint: Point) {\n  const x = sourcePoint.x - targetPoint.x;\n  const y = sourcePoint.y - targetPoint.y;\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * 两点间曲线\n * @param sourcePoint\n * @param targetPoint\n */\nexport const quadratic = (sourcePoint: Point, targetPoint: Point): string => {\n  const sourceX = sourcePoint.x;\n  const targetX = targetPoint.x;\n\n  const centerX = (sourceX + targetX) / 2;\n  const centerY = (sourcePoint.y + targetPoint.y) / 2;\n  let tolerance = 30;\n\n  const sub = targetPoint.y - sourcePoint.y;\n\n  if (sub > -100 && sub < 100) {\n    tolerance = Math.max(Math.abs(targetPoint.y - sourcePoint.y) / 2, 20);\n  }\n\n  return [\n    \"M\",\n    sourceX,\n    sourcePoint.y,\n    \"Q\",\n    /** 横向与竖向有区别 */\n    sourceX + tolerance,\n    sourcePoint.y,\n    centerX,\n    centerY,\n    \"T\",\n    targetX - 6,\n    targetPoint.y - 2\n  ].join(\" \");\n};\n\n/**\n * 计算屏幕缩放比例\n */\nexport function detectZoom() {\n  let ratio = window.outerWidth / window.innerWidth;\n  const screen = window.screen;\n  const ua = navigator.userAgent.toLowerCase();\n\n  if (window.devicePixelRatio !== undefined) {\n    // 由于mac retina屏幕devicePixelRatio会扩大2倍，这里mac统一用window.outerWidth / window.innerWidth表示ratio\n    const isMac = /macintosh|mac os x/i.test(ua);\n\n    ratio = isMac\n      ? window.outerWidth / window.innerWidth\n      : window.devicePixelRatio;\n  } else if (ua.indexOf(\"msie\") > -1) {\n    if ((screen as any).deviceXDPI && (screen as any).logicalXDPI) {\n      ratio = (screen as any).deviceXDPI / (screen as any).logicalXDPI;\n    }\n  } else if (\n    window.outerWidth !== undefined &&\n    window.innerWidth !== undefined\n  ) {\n    ratio = window.outerWidth / window.innerWidth;\n  }\n\n  if (ratio) {\n    ratio = Math.round(ratio * 100) / 100;\n  }\n\n  return ratio;\n}\n\n/**\n * 获取元素相对于页面的绝对位置\n */\nexport function getOffset(domNode: any, parentElem = window.document.body) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let targetDomNode = domNode;\n\n  while (targetDomNode !== parentElem && targetDomNode != null) {\n    offsetLeft += targetDomNode.offsetLeft;\n    offsetTop += targetDomNode.offsetTop;\n    targetDomNode = targetDomNode.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\n\n/** 获取元素在页面上占据的高度 */\nexport function getHeight(dom: HTMLElement) {\n  if (!dom) {\n    return 0;\n  }\n  const style = window.getComputedStyle(dom);\n  return (\n    dom.getBoundingClientRect().height +\n    Number(style.marginTop.match(/\\d+/g)) +\n    Number(style.marginBottom.match(/\\d+/g))\n  );\n}\n\n// 获取元素在页面上占据的宽度\nexport function getWidth(dom: HTMLElement) {\n  if (!dom) {\n    return 0;\n  }\n  const style = window.getComputedStyle(dom);\n  return (\n    dom.getBoundingClientRect().width +\n    Number(style.marginLeft.match(/\\d+/g)) +\n    Number(style.marginRight.match(/\\d+/g))\n  );\n}\n\n/** 获取元素在页面的绝对位置 */\nexport function getPosition(dom: HTMLElement) {\n  if (!dom) {\n    return 0;\n  }\n  return {\n    x: dom.getBoundingClientRect().x,\n    y: dom.getBoundingClientRect().y\n  };\n}\n\nexport function calcLinkPosition(node, position) {\n  let x = node?.x + node?.width;\n  let y = node?.y + node?.height / 2;\n  if (position === \"left\") {\n    x = node?.x;\n    y = node?.y + node?.height / 2;\n  } else if (position === \"right\") {\n    x = node?.x + node?.width;\n    y = node?.y + node?.height / 2;\n  } else if (position === \"top\") {\n    x = node?.x + node?.width / 2;\n    y = node?.y;\n  } else if (position === \"bottom\") {\n    x = node?.x + node?.width / 2;\n    y = node?.y + node?.height;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\n// 处理不同图形的path数据\nexport function handlePathData(shape: Shape, shapeProps: ShapeProps): string {\n  const { x, y, width, height, direction } = shapeProps;\n  let pathData = \"\";\n  if (shape === \"rect\") {\n    pathData = `M${x} ${y} h ${width} v ${height} h -${width} Z`;\n    if (direction === \"right\") {\n      pathData = `M${x} ${y} h -${width} v -${height} h ${width} Z`;\n    }\n  }\n  return pathData;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}