{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Point = function () {\n  function Point() {}\n\n  return Point;\n}();\n\nexports.Point = Point;\n\nfunction crossProduct(p1, p2, p3) {\n  var x1 = p2.x - p1.x;\n  var y1 = p2.y - p1.y;\n  var x2 = p3.x - p1.x;\n  var y2 = p3.y - p1.y;\n  return x1 * y2 - x2 * y1;\n}\n\nexports.crossProduct = crossProduct;\n\nfunction crossPoint(p1, p2, p3, p4) {\n  var area1 = crossProduct(p3, p2, p1);\n  var area2 = crossProduct(p4, p1, p2);\n  var ansx = (p3.x * area2 + p4.x * area1) / (area2 + area1);\n  var ansy = (p3.y * area2 + p4.y * area1) / (area2 + area1);\n  return {\n    x: ansx,\n    y: ansy\n  };\n}\n\nexports.crossPoint = crossPoint;\nvar ZERO = 1e-9;\n\nfunction isCross(p1, p2, p3, p4) {\n  if (crossProduct(p1, p3, p4) * crossProduct(p2, p3, p4) <= ZERO && crossProduct(p3, p1, p2) * crossProduct(p4, p1, p2) <= ZERO) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isCross = isCross;\n\nexports.distance = function (p1, p2) {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));\n};\n\nexports.getControlPoint = function (from, to, ratio, direct) {\n  if (direct === void 0) {\n    direct = 1;\n  }\n\n  var x1 = from.x,\n      y1 = from.y;\n  var x2 = to.x,\n      y2 = to.y;\n  var midX = (x1 + x2) / 2;\n  var midY = (y1 + y2) / 2;\n\n  if (x1 === x2 && y1 === y2) {\n    return {\n      x: x1,\n      y: y2\n    };\n  } else if (x1 === x2) {\n    return {\n      x: x1 - ratio * Math.abs(y2 - y1),\n      y: midY\n    };\n  } else if (y1 === y2) {\n    return {\n      x: midX,\n      y: y1 + ratio * Math.abs(x2 - x1)\n    };\n  }\n\n  var normalSlope = -(x2 - x1) / (y2 - y1);\n  var delta = ratio * Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n  var deltaX = -Math.sign(normalSlope) * delta / Math.sqrt(1 + Math.pow(normalSlope, 2));\n  return {\n    x: midX + direct * deltaX,\n    y: midY + direct * normalSlope * deltaX\n  };\n};\n\nexports.quadratic = function (sourcePoint, targetPoint) {\n  var centerX = (sourcePoint.x + targetPoint.x) / 2;\n  var centerY = (sourcePoint.y + targetPoint.y) / 2;\n  var tolerance = 50;\n  var sub = targetPoint.y - sourcePoint.y;\n\n  if (sub > -100 && sub < 100) {\n    tolerance = Math.max(Math.abs(targetPoint.y - sourcePoint.y) / 2, 30);\n  }\n\n  return ['M', sourcePoint.x, sourcePoint.y, 'Q', sourcePoint.x, sourcePoint.y + tolerance, centerX, centerY, 'T', targetPoint.x, targetPoint.y].join(' ');\n};\n\nexports.vectorAngle = function (o, p1, p2) {\n  var va = {\n    x: p1.x - o.x,\n    y: p1.y - o.y\n  };\n  var vb = {\n    x: p2.x - o.x,\n    y: p2.y - o.y\n  };\n  var va_vb = va.x * vb.x + va.y * vb.y;\n  var va_val = Math.sqrt(va.x * va.x + va.y * va.y);\n  var vb_val = Math.sqrt(vb.x * vb.x + vb.y * vb.y);\n  var cosValue = va_vb / (va_val * vb_val);\n  return Math.acos(cosValue) / Math.PI * 180;\n};","map":{"version":3,"sources":["../../src/Utils/graph.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Point = (function () {\n    function Point() {\n    }\n    return Point;\n}());\nexports.Point = Point;\nfunction crossProduct(p1, p2, p3) {\n    var x1 = p2.x - p1.x;\n    var y1 = p2.y - p1.y;\n    var x2 = p3.x - p1.x;\n    var y2 = p3.y - p1.y;\n    return x1 * y2 - x2 * y1;\n}\nexports.crossProduct = crossProduct;\nfunction crossPoint(p1, p2, p3, p4) {\n    var area1 = crossProduct(p3, p2, p1);\n    var area2 = crossProduct(p4, p1, p2);\n    var ansx = (p3.x * area2 + p4.x * area1) / (area2 + area1);\n    var ansy = (p3.y * area2 + p4.y * area1) / (area2 + area1);\n    return {\n        x: ansx,\n        y: ansy,\n    };\n}\nexports.crossPoint = crossPoint;\nvar ZERO = 1e-9;\nfunction isCross(p1, p2, p3, p4) {\n    if (crossProduct(p1, p3, p4) * crossProduct(p2, p3, p4) <= ZERO\n        && crossProduct(p3, p1, p2) * crossProduct(p4, p1, p2) <= ZERO) {\n        return true;\n    }\n    return false;\n}\nexports.isCross = isCross;\nexports.distance = function (p1, p2) {\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));\n};\nexports.getControlPoint = function (from, to, ratio, direct) {\n    if (direct === void 0) { direct = 1; }\n    var x1 = from.x, y1 = from.y;\n    var x2 = to.x, y2 = to.y;\n    var midX = (x1 + x2) / 2;\n    var midY = (y1 + y2) / 2;\n    if (x1 === x2 && y1 === y2) {\n        return {\n            x: x1,\n            y: y2,\n        };\n    }\n    else if (x1 === x2) {\n        return {\n            x: x1 - ratio * Math.abs(y2 - y1),\n            y: midY,\n        };\n    }\n    else if (y1 === y2) {\n        return {\n            x: midX,\n            y: y1 + ratio * Math.abs(x2 - x1),\n        };\n    }\n    var normalSlope = -(x2 - x1) / (y2 - y1);\n    var delta = ratio * Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    var deltaX = -Math.sign(normalSlope) * delta / Math.sqrt(1 + Math.pow(normalSlope, 2));\n    return {\n        x: midX + direct * deltaX,\n        y: midY + direct * normalSlope * deltaX\n    };\n};\nexports.quadratic = function (sourcePoint, targetPoint) {\n    var centerX = (sourcePoint.x + targetPoint.x) / 2;\n    var centerY = (sourcePoint.y + targetPoint.y) / 2;\n    var tolerance = 50;\n    var sub = targetPoint.y - sourcePoint.y;\n    if (sub > -100 && sub < 100) {\n        tolerance = Math.max(Math.abs(targetPoint.y - sourcePoint.y) / 2, 30);\n    }\n    return [\n        'M',\n        sourcePoint.x,\n        sourcePoint.y,\n        'Q',\n        sourcePoint.x,\n        sourcePoint.y + tolerance,\n        centerX,\n        centerY,\n        'T',\n        targetPoint.x,\n        targetPoint.y\n    ].join(' ');\n};\nexports.vectorAngle = function (o, p1, p2) {\n    var va = {\n        x: p1.x - o.x,\n        y: p1.y - o.y,\n    };\n    var vb = {\n        x: p2.x - o.x,\n        y: p2.y - o.y,\n    };\n    var va_vb = (va.x * vb.x) + (va.y * vb.y);\n    var va_val = Math.sqrt(va.x * va.x + va.y * va.y);\n    var vb_val = Math.sqrt(vb.x * vb.x + vb.y * vb.y);\n    var cosValue = va_vb / (va_val * vb_val);\n    return Math.acos(cosValue) / Math.PI * 180;\n};\n//# sourceMappingURL=graph.js.map"]},"metadata":{},"sourceType":"script"}