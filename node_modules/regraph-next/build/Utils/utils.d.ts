declare type fn<T, TResult> = (item: T) => TResult;
export declare function find<T>(array: T[], func: fn<T, boolean>): T | undefined;
export declare function findIndex<T>(array: T[], func: fn<T, boolean>): number;
export declare function minBy<T, U>(array: T[], fn: fn<T, U>): T | undefined;
export declare function maxBy<T, U>(array: T[], fn: fn<T, U>): T | undefined;
export declare function sumBy<T>(array: T[], fn: fn<T, number>): number;
export declare function reverseArray<T>(array: T[], func: (data: T, index: number) => T): T[];
export declare function getObjectMaxMin(obj: any): {
    maxValue: number;
    minValue: number;
};
export {};
